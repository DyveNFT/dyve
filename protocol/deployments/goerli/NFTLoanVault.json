{
  "address": "0xbE43C7b5a263b86b06C7E428BE469DA92D6ef921",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "listedOn",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tknAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tknId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "compliance",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "dailyFee",
              "type": "uint256"
            },
            {
              "internalType": "enum ReturnCondition",
              "name": "returnCondition",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "currency",
                  "type": "string"
                }
              ],
              "internalType": "struct NFTCollateral",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct NFTListing",
          "name": "listing",
          "type": "tuple"
        }
      ],
      "name": "borrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "listedOn",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tknAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tknId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "compliance",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "dailyFee",
              "type": "uint256"
            },
            {
              "internalType": "enum ReturnCondition",
              "name": "returnCondition",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "currency",
                  "type": "string"
                }
              ],
              "internalType": "struct NFTCollateral",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct NFTListing",
          "name": "listing",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "borrowAt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loanedNFT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "borrowedOn",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "listedOn",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tknAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tknId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "compliance",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "dailyFee",
              "type": "uint256"
            },
            {
              "internalType": "enum ReturnCondition",
              "name": "returnCondition",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "currency",
                  "type": "string"
                }
              ],
              "internalType": "struct NFTCollateral",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct NFTListing",
          "name": "listing",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "paid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "PL",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "loanedNFTCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x116058000388135fd7416bb5fa271259841aa30feceb6bfdeb08d03252c877b4",
  "receipt": {
    "to": null,
    "from": "0xc0Ce3eA2F4308EB18b5631BB0ef02D273c3Fc32B",
    "contractAddress": "0xbE43C7b5a263b86b06C7E428BE469DA92D6ef921",
    "transactionIndex": 1,
    "gasUsed": "1241200",
    "logsBloom": "0x
    "blockHash": "0x9403e553676c0118e5921ab9eec2ac57b90391a5628e206cf41f2cc9ace27ca3",
    "transactionHash": "0x116058000388135fd7416bb5fa271259841aa30feceb6bfdeb08d03252c877b4",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 7273194,
        "transactionHash": "0x116058000388135fd7416bb5fa271259841aa30feceb6bfdeb08d03252c877b4",
        "address": "0xbE43C7b5a263b86b06C7E428BE469DA92D6ef921",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c0ce3ea2f4308eb18b5631bb0ef02d273c3fc32b"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0x9403e553676c0118e5921ab9eec2ac57b90391a5628e206cf41f2cc9ace27ca3"
      }
    ],
    "blockNumber": 7273194,
    "cumulativeGasUsed": "1380769",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "957f51fbb4fbc4d291eafeb765dec08b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"listedOn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tknAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tknId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"compliance\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dailyFee\",\"type\":\"uint256\"},{\"internalType\":\"enum ReturnCondition\",\"name\":\"returnCondition\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"}],\"internalType\":\"struct NFTCollateral\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct NFTListing\",\"name\":\"listing\",\"type\":\"tuple\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"listedOn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tknAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tknId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"compliance\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dailyFee\",\"type\":\"uint256\"},{\"internalType\":\"enum ReturnCondition\",\"name\":\"returnCondition\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"}],\"internalType\":\"struct NFTCollateral\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct NFTListing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"borrowAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loanedNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"borrowedOn\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"listedOn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tknAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tknId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"compliance\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dailyFee\",\"type\":\"uint256\"},{\"internalType\":\"enum ReturnCondition\",\"name\":\"returnCondition\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"}],\"internalType\":\"struct NFTCollateral\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct NFTListing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"PL\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"loanedNFTCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"borrowAt(address,(uint256,address,uint256,string,uint256,uint8,uint256,(uint256,string)),uint256)\":{\"notice\":\"Helper to load test data only\"}},\"notice\":\"Contract to describe all Loans, the collateral and conditions accepted by the borrower\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTLoanVault.sol\":\"NFTLoanVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/NFTListing.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\nStructure representing NFTListing for a Lender\\n*/\\nstruct NFTListing {\\n    uint256 listedOn;\\n    address tknAddress;\\n    uint256 tknId;\\n    string compliance;\\n    uint256 dailyFee;\\n    ReturnCondition returnCondition;\\n    uint256 expiry;\\n    NFTCollateral collateral;\\n}\\n\\nstruct NFTCollateral {\\n    uint256 amount;\\n    string currency;\\n}\\n\\nenum ReturnCondition {\\n    SAME,\\n    ANY\\n}\\n\",\"keccak256\":\"0xf1105100849cce749df1040c47af2001602cc43d1f62f83571679d3b4e1fb7df\",\"license\":\"MIT\"},\"contracts/NFTLoanVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./NFTListing.sol\\\";\\n\\n/**\\n * Contract to describe all Loans, the collateral and conditions accepted by the borrower\\n */\\ncontract NFTLoanVault is Ownable {\\n    // Structure to represent loan - from listing to all agreed on conditions\\n    struct NFTLoan {\\n        uint256 borrowedOn;\\n        NFTListing listing;\\n        uint256 paid;\\n        uint256 sold;\\n        uint256 PL;\\n    }\\n    //borrower's loans\\n    mapping(address => mapping(uint256 => NFTLoan)) public loanedNFT;\\n\\n    // Each borrower may have multiple NFTs borrowed\\n    mapping(address => uint256) public loanedNFTCount;\\n\\n    function borrow(address borrower, NFTListing memory listing) public {\\n        loanedNFTCount[borrower] = loanedNFTCount[borrower] + 1;\\n        uint256 currentCount = loanedNFTCount[borrower];\\n        loanedNFT[borrower][currentCount] = NFTLoan(\\n            block.timestamp,\\n            listing,\\n            0,\\n            0,\\n            0\\n        );\\n    }\\n\\n    /**\\n     * Helper to load test data only\\n     */\\n    function borrowAt(\\n        address borrower,\\n        NFTListing memory listing,\\n        uint256 time\\n    ) public {\\n        loanedNFTCount[borrower] = loanedNFTCount[borrower] + 1;\\n        uint256 currentCount = loanedNFTCount[borrower];\\n        loanedNFT[borrower][currentCount] = NFTLoan(time, listing, 0, 0, 0);\\n    }\\n}\\n\",\"keccak256\":\"0x993b27f95035edc872be1678ee449e4f35fc4f96ab13f26bf8d995ce274f6ef0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61150b8061010d6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638d1c3e971161005b5780638d1c3e97146100d85780638da5cb5b1461010c578063d657ee1a1461012a578063f2fde38b146101465761007d565b80631ce3ba0d14610082578063588b23e91461009e578063715018a6146100ce575b600080fd5b61009c60048036038101906100979190610e04565b610162565b005b6100b860048036038101906100b39190610d7b565b6103d9565b6040516100c591906110cc565b60405180910390f35b6100d66103f1565b005b6100f260048036038101906100ed9190610e73565b610405565b6040516101039594939291906110e7565b60405180910390f35b61011461064e565b6040516101219190611071565b60405180910390f35b610144600480360381019061013f9190610da8565b610677565b005b610160600480360381019061015b9190610d7b565b6108ed565b005b6001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546101ae91906111c4565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506040518060a0016040528083815260200184815260200160008152602001600081526020016000815250600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600082015181600001556020820151816001016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019080519060200190610339929190610abb565b506080820151816004015560a08201518160050160006101000a81548160ff0219169083600181111561036f5761036e61134f565b5b021790555060c0820151816006015560e0820151816007016000820151816000015560208201518160010190805190602001906103ad929190610abb565b5050505050604082015181600a0155606082015181600b0155608082015181600c015590505050505050565b60026020528060005260406000206000915090505481565b6103f9610971565b61040360006109ef565b565b6001602052816000526040600020602052806000526040600020600091509150508060000154908060010160405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820180546104b6906112bd565b80601f01602080910402602001604051908101604052809291908181526020018280546104e2906112bd565b801561052f5780601f106105045761010080835404028352916020019161052f565b820191906000526020600020905b81548152906001019060200180831161051257829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff1660018111156105675761056661134f565b5b60018111156105795761057861134f565b5b81526020016006820154815260200160078201604051806040016040529081600082015481526020016001820180546105b1906112bd565b80601f01602080910402602001604051908101604052809291908181526020018280546105dd906112bd565b801561062a5780601f106105ff5761010080835404028352916020019161062a565b820191906000526020600020905b81548152906001019060200180831161060d57829003601f168201915b505050505081525050815250509080600a01549080600b01549080600c0154905085565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106c391906111c4565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506040518060a0016040528042815260200183815260200160008152602001600081526020016000815250600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600082015181600001556020820151816001016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301908051906020019061084e929190610abb565b506080820151816004015560a08201518160050160006101000a81548160ff021916908360018111156108845761088361134f565b5b021790555060c0820151816006015560e0820151816007016000820151816000015560208201518160010190805190602001906108c2929190610abb565b5050505050604082015181600a0155606082015181600b0155608082015181600c0155905050505050565b6108f5610971565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610965576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095c9061108c565b60405180910390fd5b61096e816109ef565b50565b610979610ab3565b73ffffffffffffffffffffffffffffffffffffffff1661099761064e565b73ffffffffffffffffffffffffffffffffffffffff16146109ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e4906110ac565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610ac7906112bd565b90600052602060002090601f016020900481019282610ae95760008555610b30565b82601f10610b0257805160ff1916838001178555610b30565b82800160010185558215610b30579182015b82811115610b2f578251825591602001919060010190610b14565b5b509050610b3d9190610b41565b5090565b5b80821115610b5a576000816000905550600101610b42565b5090565b6000610b71610b6c84611166565b611141565b905082815260208101848484011115610b8d57610b8c6113eb565b5b610b9884828561127b565b509392505050565b600081359050610baf81611497565b92915050565b600081359050610bc4816114ae565b92915050565b600082601f830112610bdf57610bde6113dc565b5b8135610bef848260208601610b5e565b91505092915050565b600060408284031215610c0e57610c0d6113e1565b5b610c186040611141565b90506000610c2884828501610d66565b600083015250602082013567ffffffffffffffff811115610c4c57610c4b6113e6565b5b610c5884828501610bca565b60208301525092915050565b60006101008284031215610c7b57610c7a6113e1565b5b610c86610100611141565b90506000610c9684828501610d66565b6000830152506020610caa84828501610ba0565b6020830152506040610cbe84828501610d66565b604083015250606082013567ffffffffffffffff811115610ce257610ce16113e6565b5b610cee84828501610bca565b6060830152506080610d0284828501610d66565b60808301525060a0610d1684828501610bb5565b60a08301525060c0610d2a84828501610d66565b60c08301525060e082013567ffffffffffffffff811115610d4e57610d4d6113e6565b5b610d5a84828501610bf8565b60e08301525092915050565b600081359050610d75816114be565b92915050565b600060208284031215610d9157610d906113f5565b5b6000610d9f84828501610ba0565b91505092915050565b60008060408385031215610dbf57610dbe6113f5565b5b6000610dcd85828601610ba0565b925050602083013567ffffffffffffffff811115610dee57610ded6113f0565b5b610dfa85828601610c64565b9150509250929050565b600080600060608486031215610e1d57610e1c6113f5565b5b6000610e2b86828701610ba0565b935050602084013567ffffffffffffffff811115610e4c57610e4b6113f0565b5b610e5886828701610c64565b9250506040610e6986828701610d66565b9150509250925092565b60008060408385031215610e8a57610e896113f5565b5b6000610e9885828601610ba0565b9250506020610ea985828601610d66565b9150509250929050565b610ebc8161121a565b82525050565b610ecb8161121a565b82525050565b610eda81611269565b82525050565b6000610eeb82611197565b610ef581856111a2565b9350610f0581856020860161128a565b610f0e816113fa565b840191505092915050565b6000610f266026836111b3565b9150610f318261140b565b604082019050919050565b6000610f496020836111b3565b9150610f548261145a565b602082019050919050565b6000604083016000830151610f776000860182611053565b5060208301518482036020860152610f8f8282610ee0565b9150508091505092915050565b600061010083016000830151610fb56000860182611053565b506020830151610fc86020860182610eb3565b506040830151610fdb6040860182611053565b5060608301518482036060860152610ff38282610ee0565b91505060808301516110086080860182611053565b5060a083015161101b60a0860182610ed1565b5060c083015161102e60c0860182611053565b5060e083015184820360e08601526110468282610f5f565b9150508091505092915050565b61105c8161125f565b82525050565b61106b8161125f565b82525050565b60006020820190506110866000830184610ec2565b92915050565b600060208201905081810360008301526110a581610f19565b9050919050565b600060208201905081810360008301526110c581610f3c565b9050919050565b60006020820190506110e16000830184611062565b92915050565b600060a0820190506110fc6000830188611062565b818103602083015261110e8187610f9c565b905061111d6040830186611062565b61112a6060830185611062565b6111376080830184611062565b9695505050505050565b600061114b61115c565b905061115782826112ef565b919050565b6000604051905090565b600067ffffffffffffffff821115611181576111806113ad565b5b61118a826113fa565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006111cf8261125f565b91506111da8361125f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561120f5761120e611320565b5b828201905092915050565b60006112258261123f565b9050919050565b600081905061123a82611483565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006112748261122c565b9050919050565b82818337600083830152505050565b60005b838110156112a857808201518184015260208101905061128d565b838111156112b7576000848401525b50505050565b600060028204905060018216806112d557607f821691505b602082108114156112e9576112e861137e565b5b50919050565b6112f8826113fa565b810181811067ffffffffffffffff82111715611317576113166113ad565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600281106114945761149361134f565b5b50565b6114a08161121a565b81146114ab57600080fd5b50565b600281106114bb57600080fd5b50565b6114c78161125f565b81146114d257600080fd5b5056fea264697066735822122098a14631e3164a9f3637a8170697202f39251cbf12bc9ebbbc1c51c3d6a5e02364736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638d1c3e971161005b5780638d1c3e97146100d85780638da5cb5b1461010c578063d657ee1a1461012a578063f2fde38b146101465761007d565b80631ce3ba0d14610082578063588b23e91461009e578063715018a6146100ce575b600080fd5b61009c60048036038101906100979190610e04565b610162565b005b6100b860048036038101906100b39190610d7b565b6103d9565b6040516100c591906110cc565b60405180910390f35b6100d66103f1565b005b6100f260048036038101906100ed9190610e73565b610405565b6040516101039594939291906110e7565b60405180910390f35b61011461064e565b6040516101219190611071565b60405180910390f35b610144600480360381019061013f9190610da8565b610677565b005b610160600480360381019061015b9190610d7b565b6108ed565b005b6001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546101ae91906111c4565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506040518060a0016040528083815260200184815260200160008152602001600081526020016000815250600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600082015181600001556020820151816001016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019080519060200190610339929190610abb565b506080820151816004015560a08201518160050160006101000a81548160ff0219169083600181111561036f5761036e61134f565b5b021790555060c0820151816006015560e0820151816007016000820151816000015560208201518160010190805190602001906103ad929190610abb565b5050505050604082015181600a0155606082015181600b0155608082015181600c015590505050505050565b60026020528060005260406000206000915090505481565b6103f9610971565b61040360006109ef565b565b6001602052816000526040600020602052806000526040600020600091509150508060000154908060010160405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820180546104b6906112bd565b80601f01602080910402602001604051908101604052809291908181526020018280546104e2906112bd565b801561052f5780601f106105045761010080835404028352916020019161052f565b820191906000526020600020905b81548152906001019060200180831161051257829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff1660018111156105675761056661134f565b5b60018111156105795761057861134f565b5b81526020016006820154815260200160078201604051806040016040529081600082015481526020016001820180546105b1906112bd565b80601f01602080910402602001604051908101604052809291908181526020018280546105dd906112bd565b801561062a5780601f106105ff5761010080835404028352916020019161062a565b820191906000526020600020905b81548152906001019060200180831161060d57829003601f168201915b505050505081525050815250509080600a01549080600b01549080600c0154905085565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106c391906111c4565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506040518060a0016040528042815260200183815260200160008152602001600081526020016000815250600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600082015181600001556020820151816001016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301908051906020019061084e929190610abb565b506080820151816004015560a08201518160050160006101000a81548160ff021916908360018111156108845761088361134f565b5b021790555060c0820151816006015560e0820151816007016000820151816000015560208201518160010190805190602001906108c2929190610abb565b5050505050604082015181600a0155606082015181600b0155608082015181600c0155905050505050565b6108f5610971565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610965576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095c9061108c565b60405180910390fd5b61096e816109ef565b50565b610979610ab3565b73ffffffffffffffffffffffffffffffffffffffff1661099761064e565b73ffffffffffffffffffffffffffffffffffffffff16146109ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e4906110ac565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610ac7906112bd565b90600052602060002090601f016020900481019282610ae95760008555610b30565b82601f10610b0257805160ff1916838001178555610b30565b82800160010185558215610b30579182015b82811115610b2f578251825591602001919060010190610b14565b5b509050610b3d9190610b41565b5090565b5b80821115610b5a576000816000905550600101610b42565b5090565b6000610b71610b6c84611166565b611141565b905082815260208101848484011115610b8d57610b8c6113eb565b5b610b9884828561127b565b509392505050565b600081359050610baf81611497565b92915050565b600081359050610bc4816114ae565b92915050565b600082601f830112610bdf57610bde6113dc565b5b8135610bef848260208601610b5e565b91505092915050565b600060408284031215610c0e57610c0d6113e1565b5b610c186040611141565b90506000610c2884828501610d66565b600083015250602082013567ffffffffffffffff811115610c4c57610c4b6113e6565b5b610c5884828501610bca565b60208301525092915050565b60006101008284031215610c7b57610c7a6113e1565b5b610c86610100611141565b90506000610c9684828501610d66565b6000830152506020610caa84828501610ba0565b6020830152506040610cbe84828501610d66565b604083015250606082013567ffffffffffffffff811115610ce257610ce16113e6565b5b610cee84828501610bca565b6060830152506080610d0284828501610d66565b60808301525060a0610d1684828501610bb5565b60a08301525060c0610d2a84828501610d66565b60c08301525060e082013567ffffffffffffffff811115610d4e57610d4d6113e6565b5b610d5a84828501610bf8565b60e08301525092915050565b600081359050610d75816114be565b92915050565b600060208284031215610d9157610d906113f5565b5b6000610d9f84828501610ba0565b91505092915050565b60008060408385031215610dbf57610dbe6113f5565b5b6000610dcd85828601610ba0565b925050602083013567ffffffffffffffff811115610dee57610ded6113f0565b5b610dfa85828601610c64565b9150509250929050565b600080600060608486031215610e1d57610e1c6113f5565b5b6000610e2b86828701610ba0565b935050602084013567ffffffffffffffff811115610e4c57610e4b6113f0565b5b610e5886828701610c64565b9250506040610e6986828701610d66565b9150509250925092565b60008060408385031215610e8a57610e896113f5565b5b6000610e9885828601610ba0565b9250506020610ea985828601610d66565b9150509250929050565b610ebc8161121a565b82525050565b610ecb8161121a565b82525050565b610eda81611269565b82525050565b6000610eeb82611197565b610ef581856111a2565b9350610f0581856020860161128a565b610f0e816113fa565b840191505092915050565b6000610f266026836111b3565b9150610f318261140b565b604082019050919050565b6000610f496020836111b3565b9150610f548261145a565b602082019050919050565b6000604083016000830151610f776000860182611053565b5060208301518482036020860152610f8f8282610ee0565b9150508091505092915050565b600061010083016000830151610fb56000860182611053565b506020830151610fc86020860182610eb3565b506040830151610fdb6040860182611053565b5060608301518482036060860152610ff38282610ee0565b91505060808301516110086080860182611053565b5060a083015161101b60a0860182610ed1565b5060c083015161102e60c0860182611053565b5060e083015184820360e08601526110468282610f5f565b9150508091505092915050565b61105c8161125f565b82525050565b61106b8161125f565b82525050565b60006020820190506110866000830184610ec2565b92915050565b600060208201905081810360008301526110a581610f19565b9050919050565b600060208201905081810360008301526110c581610f3c565b9050919050565b60006020820190506110e16000830184611062565b92915050565b600060a0820190506110fc6000830188611062565b818103602083015261110e8187610f9c565b905061111d6040830186611062565b61112a6060830185611062565b6111376080830184611062565b9695505050505050565b600061114b61115c565b905061115782826112ef565b919050565b6000604051905090565b600067ffffffffffffffff821115611181576111806113ad565b5b61118a826113fa565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006111cf8261125f565b91506111da8361125f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561120f5761120e611320565b5b828201905092915050565b60006112258261123f565b9050919050565b600081905061123a82611483565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006112748261122c565b9050919050565b82818337600083830152505050565b60005b838110156112a857808201518184015260208101905061128d565b838111156112b7576000848401525b50505050565b600060028204905060018216806112d557607f821691505b602082108114156112e9576112e861137e565b5b50919050565b6112f8826113fa565b810181811067ffffffffffffffff82111715611317576113166113ad565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600281106114945761149361134f565b5b50565b6114a08161121a565b81146114ab57600080fd5b50565b600281106114bb57600080fd5b50565b6114c78161125f565b81146114d257600080fd5b5056fea264697066735822122098a14631e3164a9f3637a8170697202f39251cbf12bc9ebbbc1c51c3d6a5e02364736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "borrowAt(address,(uint256,address,uint256,string,uint256,uint8,uint256,(uint256,string)),uint256)": {
        "notice": "Helper to load test data only"
      }
    },
    "notice": "Contract to describe all Loans, the collateral and conditions accepted by the borrower",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 189,
        "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
        "label": "loanedNFT",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NFTLoan)182_storage))"
      },
      {
        "astId": 193,
        "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
        "label": "loanedNFTCount",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_enum(ReturnCondition)163": {
        "encoding": "inplace",
        "label": "enum ReturnCondition",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(NFTLoan)182_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct NFTLoanVault.NFTLoan))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(NFTLoan)182_storage)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(NFTLoan)182_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct NFTLoanVault.NFTLoan)",
        "numberOfBytes": "32",
        "value": "t_struct(NFTLoan)182_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(NFTCollateral)160_storage": {
        "encoding": "inplace",
        "label": "struct NFTCollateral",
        "members": [
          {
            "astId": 157,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "amount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 159,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "currency",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(NFTListing)155_storage": {
        "encoding": "inplace",
        "label": "struct NFTListing",
        "members": [
          {
            "astId": 138,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "listedOn",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 140,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "tknAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 142,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "tknId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 144,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "compliance",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 146,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "dailyFee",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 149,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "returnCondition",
            "offset": 0,
            "slot": "5",
            "type": "t_enum(ReturnCondition)163"
          },
          {
            "astId": 151,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "expiry",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 154,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "collateral",
            "offset": 0,
            "slot": "7",
            "type": "t_struct(NFTCollateral)160_storage"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_struct(NFTLoan)182_storage": {
        "encoding": "inplace",
        "label": "struct NFTLoanVault.NFTLoan",
        "members": [
          {
            "astId": 172,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "borrowedOn",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 175,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "listing",
            "offset": 0,
            "slot": "1",
            "type": "t_struct(NFTListing)155_storage"
          },
          {
            "astId": 177,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "paid",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 179,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "sold",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          },
          {
            "astId": 181,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "PL",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "416"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}