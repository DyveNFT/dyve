{
  "address": "0x7434834E31140011862E03493EE1f4434D354450",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "listedOn",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tknAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tknId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "compliance",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "dailyFee",
              "type": "uint256"
            },
            {
              "internalType": "enum ReturnCondition",
              "name": "returnCondition",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "currency",
                  "type": "string"
                }
              ],
              "internalType": "struct NFTCollateral",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct NFTListing",
          "name": "listing",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "loanExpiry",
          "type": "uint256"
        }
      ],
      "name": "borrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "listedOn",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tknAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tknId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "compliance",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "dailyFee",
              "type": "uint256"
            },
            {
              "internalType": "enum ReturnCondition",
              "name": "returnCondition",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "currency",
                  "type": "string"
                }
              ],
              "internalType": "struct NFTCollateral",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct NFTListing",
          "name": "listing",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "loanExpiry",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borroweOn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price2",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "pl",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "returnTknId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "returnedCollectionAdress",
          "type": "address"
        },
        {
          "internalType": "enum NFTLoanVault.LoanStatus",
          "name": "loanStatus",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "returnedOn",
          "type": "uint256"
        }
      ],
      "name": "borrowedOn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "borrowers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loanedNFT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "borrowedOn",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "listedOn",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "tknAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tknId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "compliance",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "dailyFee",
              "type": "uint256"
            },
            {
              "internalType": "enum ReturnCondition",
              "name": "returnCondition",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "currency",
                  "type": "string"
                }
              ],
              "internalType": "struct NFTCollateral",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct NFTListing",
          "name": "listing",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "sold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "paid",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "PL",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "loanExpiry",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "returnedTknId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "returnedCollectionAddress",
          "type": "address"
        },
        {
          "internalType": "enum NFTLoanVault.LoanStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "returnedOn",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "loanedNFTCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x95c411a77dd681545411f5523c0c19c865eb52a7f817df3442691de7f669a344",
  "receipt": {
    "to": null,
    "from": "0xc0Ce3eA2F4308EB18b5631BB0ef02D273c3Fc32B",
    "contractAddress": "0x7434834E31140011862E03493EE1f4434D354450",
    "transactionIndex": 10,
    "gasUsed": "1485540",
    "logsBloom": "0x
    "blockHash": "0x22969a44e64042e070d55310686faeffe74f51363fb2c2c54be29921ef6332fa",
    "transactionHash": "0x95c411a77dd681545411f5523c0c19c865eb52a7f817df3442691de7f669a344",
    "logs": [
      {
        "transactionIndex": 10,
        "blockNumber": 7274351,
        "transactionHash": "0x95c411a77dd681545411f5523c0c19c865eb52a7f817df3442691de7f669a344",
        "address": "0x7434834E31140011862E03493EE1f4434D354450",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c0ce3ea2f4308eb18b5631bb0ef02d273c3fc32b"
        ],
        "data": "0x",
        "logIndex": 41,
        "blockHash": "0x22969a44e64042e070d55310686faeffe74f51363fb2c2c54be29921ef6332fa"
      }
    ],
    "blockNumber": 7274351,
    "cumulativeGasUsed": "4349889",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 9,
  "solcInputHash": "bd4162349310e96399e6f3b622a328f3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"listedOn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tknAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tknId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"compliance\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dailyFee\",\"type\":\"uint256\"},{\"internalType\":\"enum ReturnCondition\",\"name\":\"returnCondition\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"}],\"internalType\":\"struct NFTCollateral\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct NFTListing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"loanExpiry\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"listedOn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tknAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tknId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"compliance\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dailyFee\",\"type\":\"uint256\"},{\"internalType\":\"enum ReturnCondition\",\"name\":\"returnCondition\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"}],\"internalType\":\"struct NFTCollateral\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct NFTListing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"loanExpiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borroweOn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price2\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"pl\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"returnTknId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"returnedCollectionAdress\",\"type\":\"address\"},{\"internalType\":\"enum NFTLoanVault.LoanStatus\",\"name\":\"loanStatus\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"returnedOn\",\"type\":\"uint256\"}],\"name\":\"borrowedOn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"borrowers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loanedNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"borrowedOn\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"listedOn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tknAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tknId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"compliance\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dailyFee\",\"type\":\"uint256\"},{\"internalType\":\"enum ReturnCondition\",\"name\":\"returnCondition\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"}],\"internalType\":\"struct NFTCollateral\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct NFTListing\",\"name\":\"listing\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"sold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"PL\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"loanExpiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"returnedTknId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"returnedCollectionAddress\",\"type\":\"address\"},{\"internalType\":\"enum NFTLoanVault.LoanStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"returnedOn\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"loanedNFTCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"borrowedOn(address,(uint256,address,uint256,string,uint256,uint8,uint256,(uint256,string)),uint256,uint256,uint256,uint256,int256,uint256,address,uint8,uint256)\":{\"notice\":\"Helper to load test data only\"}},\"notice\":\"Contract to describe all Loans, the collateral and conditions accepted by the borrower\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTLoanVault.sol\":\"NFTLoanVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/NFTListing.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\nStructure representing NFTListing for a Lender\\n*/\\nstruct NFTListing {\\n    uint256 listedOn;\\n    address tknAddress;\\n    uint256 tknId;\\n    string compliance;\\n    uint256 dailyFee;\\n    ReturnCondition returnCondition;\\n    uint256 expiry;\\n    NFTCollateral collateral;\\n}\\n\\nstruct NFTCollateral {\\n    uint256 amount;\\n    string currency;\\n}\\n\\nenum ReturnCondition {\\n    SAME,\\n    ANY\\n}\\n\",\"keccak256\":\"0xf1105100849cce749df1040c47af2001602cc43d1f62f83571679d3b4e1fb7df\",\"license\":\"MIT\"},\"contracts/NFTLoanVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./NFTListing.sol\\\";\\n\\n/**\\n * Contract to describe all Loans, the collateral and conditions accepted by the borrower\\n */\\ncontract NFTLoanVault is Ownable {\\n    // Structure to represent loan - from listing to all agreed on conditions\\n    struct NFTLoan {\\n        uint256 borrowedOn;\\n        NFTListing listing;\\n        uint256 sold;\\n        uint256 paid;\\n        int256 PL;\\n        uint256 loanExpiry;\\n        uint256 returnedTknId;\\n        address returnedCollectionAddress;\\n        LoanStatus status;\\n        uint256 returnedOn;\\n    }\\n\\n    enum LoanStatus {\\n        INITIAL,\\n        RETURN_W_DYVE,\\n        RETURN_SELF,\\n        FORTEIT_COLLATERAL\\n    }\\n\\n    //borrower's loans\\n    mapping(address => mapping(uint256 => NFTLoan)) public loanedNFT;\\n    mapping(address => bool) internal borrowerExists;\\n    address[] public borrowers;\\n\\n    // Each borrower may have multiple NFTs borrowed\\n    mapping(address => uint256) public loanedNFTCount;\\n\\n    function addBorrower(address borrower) internal {\\n        require(!borrowerExists[borrower]);\\n        borrowers.push(borrower);\\n        borrowerExists[borrower] = true;\\n    }\\n\\n    function borrow(\\n        address borrower,\\n        NFTListing memory listing,\\n        uint256 loanExpiry\\n    ) public {\\n        loanedNFTCount[borrower] = loanedNFTCount[borrower] + 1;\\n        uint256 currentCount = loanedNFTCount[borrower];\\n        loanedNFT[borrower][currentCount] = NFTLoan(\\n            block.timestamp,\\n            listing,\\n            0,\\n            0,\\n            0,\\n            loanExpiry,\\n            0,\\n            address(0),\\n            LoanStatus.INITIAL,\\n            0\\n        );\\n    }\\n\\n    /**\\n     * Helper to load test data only\\n     */\\n    function borrowedOn(\\n        address borrower,\\n        NFTListing memory listing,\\n        uint256 loanExpiry,\\n        uint256 borroweOn,\\n        uint256 price1,\\n        uint256 price2,\\n        int256 pl,\\n        uint256 returnTknId,\\n        address returnedCollectionAdress,\\n        LoanStatus loanStatus,\\n        uint256 returnedOn\\n    ) public {\\n        loanedNFTCount[borrower] = loanedNFTCount[borrower] + 1;\\n        uint256 currentCount = loanedNFTCount[borrower];\\n        loanedNFT[borrower][currentCount] = NFTLoan(\\n            borroweOn,\\n            listing,\\n            price1,\\n            price2,\\n            pl,\\n            loanExpiry,\\n            returnTknId,\\n            returnedCollectionAdress,\\n            loanStatus,\\n            returnedOn\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0xf8937567521bc852cf1ea9caf8a067ae4076c220043e2e83865663d7784f2cc7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6119778061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638d1c3e971161005b5780638d1c3e97146101135780638da5cb5b1461014c578063ebc545821461016a578063f2fde38b1461018657610088565b806344b3b1191461008d578063588b23e9146100a9578063715018a6146100d95780637924d93f146100e3575b600080fd5b6100a760048036038101906100a29190611062565b6101a2565b005b6100c360048036038101906100be9190611035565b6104fb565b6040516100d09190611485565b60405180910390f35b6100e1610513565b005b6100fd60048036038101906100f89190611221565b610527565b60405161010a919061142a565b60405180910390f35b61012d600480360381019061012891906111e1565b610566565b6040516101439a999897969594939291906114a0565b60405180910390f35b6101546107fa565b604051610161919061142a565b60405180910390f35b610184600480360381019061017f91906110d1565b610823565b005b6101a0600480360381019061019b9190611035565b610b7d565b005b6001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546101ee91906115c6565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060405180610140016040528042815260200184815260200160008152602001600081526020016000815260200183815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600060038111156102e0576102df611780565b5b81526020016000815250600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600082015181600001556020820151816001016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030190805190602001906103c4929190610d4b565b506080820151816004015560a08201518160050160006101000a81548160ff021916908360018111156103fa576103f9611780565b5b021790555060c0820151816006015560e082015181600701600082015181600001556020820151816001019080519060200190610438929190610d4b565b5050505050604082015181600a0155606082015181600b0155608082015181600c015560a082015181600d015560c082015181600e015560e082015181600f0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061010082015181600f0160146101000a81548160ff021916908360038111156104e2576104e1611780565b5b0217905550610120820151816010015590505050505050565b60046020528060005260406000206000915090505481565b61051b610c01565b6105256000610c7f565b565b6003818154811061053757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001602052816000526040600020602052806000526040600020600091509150508060000154908060010160405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382018054610617906116ee565b80601f0160208091040260200160405190810160405280929190818152602001828054610643906116ee565b80156106905780601f1061066557610100808354040283529160200191610690565b820191906000526020600020905b81548152906001019060200180831161067357829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff1660018111156106c8576106c7611780565b5b60018111156106da576106d9611780565b5b8152602001600682015481526020016007820160405180604001604052908160008201548152602001600182018054610712906116ee565b80601f016020809104026020016040519081016040528092919081815260200182805461073e906116ee565b801561078b5780601f106107605761010080835404028352916020019161078b565b820191906000526020600020905b81548152906001019060200180831161076e57829003601f168201915b505050505081525050815250509080600a01549080600b01549080600c01549080600d01549080600e01549080600f0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600f0160149054906101000a900460ff1690806010015490508a565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001600460008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461086f91906115c6565b600460008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600460008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506040518061014001604052808a81526020018c81526020018981526020018881526020018781526020018b81526020018681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184600381111561095b5761095a611780565b5b815260200183815250600160008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600082015181600001556020820151816001016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019080519060200190610a3e929190610d4b565b506080820151816004015560a08201518160050160006101000a81548160ff02191690836001811115610a7457610a73611780565b5b021790555060c0820151816006015560e082015181600701600082015181600001556020820151816001019080519060200190610ab2929190610d4b565b5050505050604082015181600a0155606082015181600b0155608082015181600c015560a082015181600d015560c082015181600e015560e082015181600f0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061010082015181600f0160146101000a81548160ff02191690836003811115610b5c57610b5b611780565b5b02179055506101208201518160100155905050505050505050505050505050565b610b85610c01565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610bf5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bec90611445565b60405180910390fd5b610bfe81610c7f565b50565b610c09610d43565b73ffffffffffffffffffffffffffffffffffffffff16610c276107fa565b73ffffffffffffffffffffffffffffffffffffffff1614610c7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7490611465565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610d57906116ee565b90600052602060002090601f016020900481019282610d795760008555610dc0565b82601f10610d9257805160ff1916838001178555610dc0565b82800160010185558215610dc0579182015b82811115610dbf578251825591602001919060010190610da4565b5b509050610dcd9190610dd1565b5090565b5b80821115610dea576000816000905550600101610dd2565b5090565b6000610e01610dfc84611568565b611543565b905082815260208101848484011115610e1d57610e1c61181c565b5b610e288482856116ac565b509392505050565b600081359050610e3f816118dc565b92915050565b600081359050610e54816118f3565b92915050565b600081359050610e6981611903565b92915050565b600081359050610e7e81611913565b92915050565b600082601f830112610e9957610e9861180d565b5b8135610ea9848260208601610dee565b91505092915050565b600060408284031215610ec857610ec7611812565b5b610ed26040611543565b90506000610ee284828501611020565b600083015250602082013567ffffffffffffffff811115610f0657610f05611817565b5b610f1284828501610e84565b60208301525092915050565b60006101008284031215610f3557610f34611812565b5b610f40610100611543565b90506000610f5084828501611020565b6000830152506020610f6484828501610e30565b6020830152506040610f7884828501611020565b604083015250606082013567ffffffffffffffff811115610f9c57610f9b611817565b5b610fa884828501610e84565b6060830152506080610fbc84828501611020565b60808301525060a0610fd084828501610e5a565b60a08301525060c0610fe484828501611020565b60c08301525060e082013567ffffffffffffffff81111561100857611007611817565b5b61101484828501610eb2565b60e08301525092915050565b60008135905061102f8161192a565b92915050565b60006020828403121561104b5761104a611826565b5b600061105984828501610e30565b91505092915050565b60008060006060848603121561107b5761107a611826565b5b600061108986828701610e30565b935050602084013567ffffffffffffffff8111156110aa576110a9611821565b5b6110b686828701610f1e565b92505060406110c786828701611020565b9150509250925092565b60008060008060008060008060008060006101608c8e0312156110f7576110f6611826565b5b60006111058e828f01610e30565b9b505060208c013567ffffffffffffffff81111561112657611125611821565b5b6111328e828f01610f1e565b9a505060406111438e828f01611020565b99505060606111548e828f01611020565b98505060806111658e828f01611020565b97505060a06111768e828f01611020565b96505060c06111878e828f01610e6f565b95505060e06111988e828f01611020565b9450506101006111aa8e828f01610e30565b9350506101206111bc8e828f01610e45565b9250506101406111ce8e828f01611020565b9150509295989b509295989b9093969950565b600080604083850312156111f8576111f7611826565b5b600061120685828601610e30565b925050602061121785828601611020565b9150509250929050565b60006020828403121561123757611236611826565b5b600061124584828501611020565b91505092915050565b6112578161161c565b82525050565b6112668161161c565b82525050565b61127581611688565b82525050565b6112848161169a565b82525050565b61129381611654565b82525050565b60006112a482611599565b6112ae81856115a4565b93506112be8185602086016116bb565b6112c78161182b565b840191505092915050565b60006112df6026836115b5565b91506112ea8261183c565b604082019050919050565b60006113026020836115b5565b915061130d8261188b565b602082019050919050565b6000604083016000830151611330600086018261140c565b50602083015184820360208601526113488282611299565b9150508091505092915050565b60006101008301600083015161136e600086018261140c565b506020830151611381602086018261124e565b506040830151611394604086018261140c565b50606083015184820360608601526113ac8282611299565b91505060808301516113c1608086018261140c565b5060a08301516113d460a086018261127b565b5060c08301516113e760c086018261140c565b5060e083015184820360e08601526113ff8282611318565b9150508091505092915050565b6114158161167e565b82525050565b6114248161167e565b82525050565b600060208201905061143f600083018461125d565b92915050565b6000602082019050818103600083015261145e816112d2565b9050919050565b6000602082019050818103600083015261147e816112f5565b9050919050565b600060208201905061149a600083018461141b565b92915050565b6000610140820190506114b6600083018d61141b565b81810360208301526114c8818c611355565b90506114d7604083018b61141b565b6114e4606083018a61141b565b6114f1608083018961128a565b6114fe60a083018861141b565b61150b60c083018761141b565b61151860e083018661125d565b61152661010083018561126c565b61153461012083018461141b565b9b9a5050505050505050505050565b600061154d61155e565b90506115598282611720565b919050565b6000604051905090565b600067ffffffffffffffff821115611583576115826117de565b5b61158c8261182b565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006115d18261167e565b91506115dc8361167e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561161157611610611751565b5b828201905092915050565b60006116278261165e565b9050919050565b600081905061163c826118b4565b919050565b600081905061164f826118c8565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116938261162e565b9050919050565b60006116a582611641565b9050919050565b82818337600083830152505050565b60005b838110156116d95780820151818401526020810190506116be565b838111156116e8576000848401525b50505050565b6000600282049050600182168061170657607f821691505b6020821081141561171a576117196117af565b5b50919050565b6117298261182b565b810181811067ffffffffffffffff82111715611748576117476117de565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600481106118c5576118c4611780565b5b50565b600281106118d9576118d8611780565b5b50565b6118e58161161c565b81146118f057600080fd5b50565b6004811061190057600080fd5b50565b6002811061191057600080fd5b50565b61191c81611654565b811461192757600080fd5b50565b6119338161167e565b811461193e57600080fd5b5056fea2646970667358221220bbb8768dac2a74ba7136ebf1f221795d5a447905b63bd4135c422e724ace4ed764736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80638d1c3e971161005b5780638d1c3e97146101135780638da5cb5b1461014c578063ebc545821461016a578063f2fde38b1461018657610088565b806344b3b1191461008d578063588b23e9146100a9578063715018a6146100d95780637924d93f146100e3575b600080fd5b6100a760048036038101906100a29190611062565b6101a2565b005b6100c360048036038101906100be9190611035565b6104fb565b6040516100d09190611485565b60405180910390f35b6100e1610513565b005b6100fd60048036038101906100f89190611221565b610527565b60405161010a919061142a565b60405180910390f35b61012d600480360381019061012891906111e1565b610566565b6040516101439a999897969594939291906114a0565b60405180910390f35b6101546107fa565b604051610161919061142a565b60405180910390f35b610184600480360381019061017f91906110d1565b610823565b005b6101a0600480360381019061019b9190611035565b610b7d565b005b6001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546101ee91906115c6565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060405180610140016040528042815260200184815260200160008152602001600081526020016000815260200183815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600060038111156102e0576102df611780565b5b81526020016000815250600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600082015181600001556020820151816001016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030190805190602001906103c4929190610d4b565b506080820151816004015560a08201518160050160006101000a81548160ff021916908360018111156103fa576103f9611780565b5b021790555060c0820151816006015560e082015181600701600082015181600001556020820151816001019080519060200190610438929190610d4b565b5050505050604082015181600a0155606082015181600b0155608082015181600c015560a082015181600d015560c082015181600e015560e082015181600f0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061010082015181600f0160146101000a81548160ff021916908360038111156104e2576104e1611780565b5b0217905550610120820151816010015590505050505050565b60046020528060005260406000206000915090505481565b61051b610c01565b6105256000610c7f565b565b6003818154811061053757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001602052816000526040600020602052806000526040600020600091509150508060000154908060010160405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382018054610617906116ee565b80601f0160208091040260200160405190810160405280929190818152602001828054610643906116ee565b80156106905780601f1061066557610100808354040283529160200191610690565b820191906000526020600020905b81548152906001019060200180831161067357829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff1660018111156106c8576106c7611780565b5b60018111156106da576106d9611780565b5b8152602001600682015481526020016007820160405180604001604052908160008201548152602001600182018054610712906116ee565b80601f016020809104026020016040519081016040528092919081815260200182805461073e906116ee565b801561078b5780601f106107605761010080835404028352916020019161078b565b820191906000526020600020905b81548152906001019060200180831161076e57829003601f168201915b505050505081525050815250509080600a01549080600b01549080600c01549080600d01549080600e01549080600f0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600f0160149054906101000a900460ff1690806010015490508a565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001600460008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461086f91906115c6565b600460008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600460008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506040518061014001604052808a81526020018c81526020018981526020018881526020018781526020018b81526020018681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184600381111561095b5761095a611780565b5b815260200183815250600160008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600082015181600001556020820151816001016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019080519060200190610a3e929190610d4b565b506080820151816004015560a08201518160050160006101000a81548160ff02191690836001811115610a7457610a73611780565b5b021790555060c0820151816006015560e082015181600701600082015181600001556020820151816001019080519060200190610ab2929190610d4b565b5050505050604082015181600a0155606082015181600b0155608082015181600c015560a082015181600d015560c082015181600e015560e082015181600f0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061010082015181600f0160146101000a81548160ff02191690836003811115610b5c57610b5b611780565b5b02179055506101208201518160100155905050505050505050505050505050565b610b85610c01565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610bf5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bec90611445565b60405180910390fd5b610bfe81610c7f565b50565b610c09610d43565b73ffffffffffffffffffffffffffffffffffffffff16610c276107fa565b73ffffffffffffffffffffffffffffffffffffffff1614610c7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7490611465565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610d57906116ee565b90600052602060002090601f016020900481019282610d795760008555610dc0565b82601f10610d9257805160ff1916838001178555610dc0565b82800160010185558215610dc0579182015b82811115610dbf578251825591602001919060010190610da4565b5b509050610dcd9190610dd1565b5090565b5b80821115610dea576000816000905550600101610dd2565b5090565b6000610e01610dfc84611568565b611543565b905082815260208101848484011115610e1d57610e1c61181c565b5b610e288482856116ac565b509392505050565b600081359050610e3f816118dc565b92915050565b600081359050610e54816118f3565b92915050565b600081359050610e6981611903565b92915050565b600081359050610e7e81611913565b92915050565b600082601f830112610e9957610e9861180d565b5b8135610ea9848260208601610dee565b91505092915050565b600060408284031215610ec857610ec7611812565b5b610ed26040611543565b90506000610ee284828501611020565b600083015250602082013567ffffffffffffffff811115610f0657610f05611817565b5b610f1284828501610e84565b60208301525092915050565b60006101008284031215610f3557610f34611812565b5b610f40610100611543565b90506000610f5084828501611020565b6000830152506020610f6484828501610e30565b6020830152506040610f7884828501611020565b604083015250606082013567ffffffffffffffff811115610f9c57610f9b611817565b5b610fa884828501610e84565b6060830152506080610fbc84828501611020565b60808301525060a0610fd084828501610e5a565b60a08301525060c0610fe484828501611020565b60c08301525060e082013567ffffffffffffffff81111561100857611007611817565b5b61101484828501610eb2565b60e08301525092915050565b60008135905061102f8161192a565b92915050565b60006020828403121561104b5761104a611826565b5b600061105984828501610e30565b91505092915050565b60008060006060848603121561107b5761107a611826565b5b600061108986828701610e30565b935050602084013567ffffffffffffffff8111156110aa576110a9611821565b5b6110b686828701610f1e565b92505060406110c786828701611020565b9150509250925092565b60008060008060008060008060008060006101608c8e0312156110f7576110f6611826565b5b60006111058e828f01610e30565b9b505060208c013567ffffffffffffffff81111561112657611125611821565b5b6111328e828f01610f1e565b9a505060406111438e828f01611020565b99505060606111548e828f01611020565b98505060806111658e828f01611020565b97505060a06111768e828f01611020565b96505060c06111878e828f01610e6f565b95505060e06111988e828f01611020565b9450506101006111aa8e828f01610e30565b9350506101206111bc8e828f01610e45565b9250506101406111ce8e828f01611020565b9150509295989b509295989b9093969950565b600080604083850312156111f8576111f7611826565b5b600061120685828601610e30565b925050602061121785828601611020565b9150509250929050565b60006020828403121561123757611236611826565b5b600061124584828501611020565b91505092915050565b6112578161161c565b82525050565b6112668161161c565b82525050565b61127581611688565b82525050565b6112848161169a565b82525050565b61129381611654565b82525050565b60006112a482611599565b6112ae81856115a4565b93506112be8185602086016116bb565b6112c78161182b565b840191505092915050565b60006112df6026836115b5565b91506112ea8261183c565b604082019050919050565b60006113026020836115b5565b915061130d8261188b565b602082019050919050565b6000604083016000830151611330600086018261140c565b50602083015184820360208601526113488282611299565b9150508091505092915050565b60006101008301600083015161136e600086018261140c565b506020830151611381602086018261124e565b506040830151611394604086018261140c565b50606083015184820360608601526113ac8282611299565b91505060808301516113c1608086018261140c565b5060a08301516113d460a086018261127b565b5060c08301516113e760c086018261140c565b5060e083015184820360e08601526113ff8282611318565b9150508091505092915050565b6114158161167e565b82525050565b6114248161167e565b82525050565b600060208201905061143f600083018461125d565b92915050565b6000602082019050818103600083015261145e816112d2565b9050919050565b6000602082019050818103600083015261147e816112f5565b9050919050565b600060208201905061149a600083018461141b565b92915050565b6000610140820190506114b6600083018d61141b565b81810360208301526114c8818c611355565b90506114d7604083018b61141b565b6114e4606083018a61141b565b6114f1608083018961128a565b6114fe60a083018861141b565b61150b60c083018761141b565b61151860e083018661125d565b61152661010083018561126c565b61153461012083018461141b565b9b9a5050505050505050505050565b600061154d61155e565b90506115598282611720565b919050565b6000604051905090565b600067ffffffffffffffff821115611583576115826117de565b5b61158c8261182b565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006115d18261167e565b91506115dc8361167e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561161157611610611751565b5b828201905092915050565b60006116278261165e565b9050919050565b600081905061163c826118b4565b919050565b600081905061164f826118c8565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116938261162e565b9050919050565b60006116a582611641565b9050919050565b82818337600083830152505050565b60005b838110156116d95780820151818401526020810190506116be565b838111156116e8576000848401525b50505050565b6000600282049050600182168061170657607f821691505b6020821081141561171a576117196117af565b5b50919050565b6117298261182b565b810181811067ffffffffffffffff82111715611748576117476117de565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600481106118c5576118c4611780565b5b50565b600281106118d9576118d8611780565b5b50565b6118e58161161c565b81146118f057600080fd5b50565b6004811061190057600080fd5b50565b6002811061191057600080fd5b50565b61191c81611654565b811461192757600080fd5b50565b6119338161167e565b811461193e57600080fd5b5056fea2646970667358221220bbb8768dac2a74ba7136ebf1f221795d5a447905b63bd4135c422e724ace4ed764736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "borrowedOn(address,(uint256,address,uint256,string,uint256,uint8,uint256,(uint256,string)),uint256,uint256,uint256,uint256,int256,uint256,address,uint8,uint256)": {
        "notice": "Helper to load test data only"
      }
    },
    "notice": "Contract to describe all Loans, the collateral and conditions accepted by the borrower",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 205,
        "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
        "label": "loanedNFT",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NFTLoan)193_storage))"
      },
      {
        "astId": 209,
        "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
        "label": "borrowerExists",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 212,
        "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
        "label": "borrowers",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 216,
        "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
        "label": "loanedNFTCount",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(LoanStatus)198": {
        "encoding": "inplace",
        "label": "enum NFTLoanVault.LoanStatus",
        "numberOfBytes": "1"
      },
      "t_enum(ReturnCondition)163": {
        "encoding": "inplace",
        "label": "enum ReturnCondition",
        "numberOfBytes": "1"
      },
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(NFTLoan)193_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct NFTLoanVault.NFTLoan))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(NFTLoan)193_storage)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(NFTLoan)193_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct NFTLoanVault.NFTLoan)",
        "numberOfBytes": "32",
        "value": "t_struct(NFTLoan)193_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(NFTCollateral)160_storage": {
        "encoding": "inplace",
        "label": "struct NFTCollateral",
        "members": [
          {
            "astId": 157,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "amount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 159,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "currency",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(NFTListing)155_storage": {
        "encoding": "inplace",
        "label": "struct NFTListing",
        "members": [
          {
            "astId": 138,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "listedOn",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 140,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "tknAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 142,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "tknId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 144,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "compliance",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 146,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "dailyFee",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 149,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "returnCondition",
            "offset": 0,
            "slot": "5",
            "type": "t_enum(ReturnCondition)163"
          },
          {
            "astId": 151,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "expiry",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 154,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "collateral",
            "offset": 0,
            "slot": "7",
            "type": "t_struct(NFTCollateral)160_storage"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_struct(NFTLoan)193_storage": {
        "encoding": "inplace",
        "label": "struct NFTLoanVault.NFTLoan",
        "members": [
          {
            "astId": 172,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "borrowedOn",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 175,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "listing",
            "offset": 0,
            "slot": "1",
            "type": "t_struct(NFTListing)155_storage"
          },
          {
            "astId": 177,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "sold",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 179,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "paid",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          },
          {
            "astId": 181,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "PL",
            "offset": 0,
            "slot": "12",
            "type": "t_int256"
          },
          {
            "astId": 183,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "loanExpiry",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256"
          },
          {
            "astId": 185,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "returnedTknId",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256"
          },
          {
            "astId": 187,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "returnedCollectionAddress",
            "offset": 0,
            "slot": "15",
            "type": "t_address"
          },
          {
            "astId": 190,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "status",
            "offset": 20,
            "slot": "15",
            "type": "t_enum(LoanStatus)198"
          },
          {
            "astId": 192,
            "contract": "contracts/NFTLoanVault.sol:NFTLoanVault",
            "label": "returnedOn",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "544"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}