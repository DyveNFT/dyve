/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { NFTLoans, NFTLoansInterface } from "../../contracts/NFTLoans";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "loanedNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "borrowedOn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "listedOn",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tknAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tknId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "listingLength",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "compliance",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "dailyFee",
            type: "uint256",
          },
          {
            internalType: "enum ReturnCondition",
            name: "returnCondition",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "currency",
                type: "string",
              },
            ],
            internalType: "struct NFTCollateral",
            name: "collateral",
            type: "tuple",
          },
        ],
        internalType: "struct NFTListing",
        name: "listing",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "paid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sold",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610aa78061010d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638d1c3e971461005b5780638da5cb5b1461008e578063f2fde38b146100ac575b600080fd5b6100596100c8565b005b61007560048036038101906100709190610581565b6100dc565b6040516100859493929190610804565b60405180910390f35b610096610333565b6040516100a391906107a9565b60405180910390f35b6100c660048036038101906100c19190610554565b61035c565b005b6100d06103e0565b6100da600061045e565b565b6001602052816000526040600020602052806000526040600020600091509150508060000154908060010160405180610140016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820180546101a190610911565b80601f01602080910402602001604051908101604052809291908181526020018280546101cd90610911565b801561021a5780601f106101ef5761010080835404028352916020019161021a565b820191906000526020600020905b8154815290600101906020018083116101fd57829003601f168201915b50505050508152602001600682015481526020016007820160009054906101000a900460ff16600181111561025257610251610943565b5b600181111561026457610263610943565b5b815260200160088201548152602001600982016040518060400160405290816000820154815260200160018201805461029c90610911565b80601f01602080910402602001604051908101604052809291908181526020018280546102c890610911565b80156103155780601f106102ea57610100808354040283529160200191610315565b820191906000526020600020905b8154815290600101906020018083116102f857829003601f168201915b505050505081525050815250509080600c01549080600d0154905084565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103646103e0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cb906107c4565b60405180910390fd5b6103dd8161045e565b50565b6103e8610522565b73ffffffffffffffffffffffffffffffffffffffff16610406610333565b73ffffffffffffffffffffffffffffffffffffffff161461045c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610453906107e4565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60008135905061053981610a43565b92915050565b60008135905061054e81610a5a565b92915050565b60006020828403121561056a576105696109a1565b5b60006105788482850161052a565b91505092915050565b60008060408385031215610598576105976109a1565b5b60006105a68582860161052a565b92505060206105b78582860161053f565b9150509250929050565b6105ca8161087d565b82525050565b6105d98161087d565b82525050565b6105e8816108cc565b82525050565b60006105f982610850565b610603818561085b565b93506106138185602086016108de565b61061c816109a6565b840191505092915050565b600061063460268361086c565b915061063f826109b7565b604082019050919050565b600061065760208361086c565b915061066282610a06565b602082019050919050565b6000604083016000830151610685600086018261078b565b506020830151848203602086015261069d82826105ee565b9150508091505092915050565b6000610140830160008301516106c3600086018261078b565b5060208301516106d660208601826105c1565b5060408301516106e9604086018261078b565b5060608301516106fc606086018261078b565b50608083015161070f608086018261078b565b5060a083015184820360a086015261072782826105ee565b91505060c083015161073c60c086018261078b565b5060e083015161074f60e08601826105df565b5061010083015161076461010086018261078b565b5061012083015184820361012086015261077e828261066d565b9150508091505092915050565b610794816108c2565b82525050565b6107a3816108c2565b82525050565b60006020820190506107be60008301846105d0565b92915050565b600060208201905081810360008301526107dd81610627565b9050919050565b600060208201905081810360008301526107fd8161064a565b9050919050565b6000608082019050610819600083018761079a565b818103602083015261082b81866106aa565b905061083a604083018561079a565b610847606083018461079a565b95945050505050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610888826108a2565b9050919050565b600081905061089d82610a2f565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108d78261088f565b9050919050565b60005b838110156108fc5780820151818401526020810190506108e1565b8381111561090b576000848401525b50505050565b6000600282049050600182168061092957607f821691505b6020821081141561093d5761093c610972565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60028110610a4057610a3f610943565b5b50565b610a4c8161087d565b8114610a5757600080fd5b50565b610a63816108c2565b8114610a6e57600080fd5b5056fea264697066735822122010e208e894fe86d3f5f1864ac9333ca8d33129ac39ac010e22e014ef336a871864736f6c63430008070033";

type NFTLoansConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTLoansConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTLoans__factory extends ContractFactory {
  constructor(...args: NFTLoansConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTLoans> {
    return super.deploy(overrides || {}) as Promise<NFTLoans>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTLoans {
    return super.attach(address) as NFTLoans;
  }
  override connect(signer: Signer): NFTLoans__factory {
    return super.connect(signer) as NFTLoans__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTLoansInterface {
    return new utils.Interface(_abi) as NFTLoansInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTLoans {
    return new Contract(address, _abi, signerOrProvider) as NFTLoans;
  }
}
