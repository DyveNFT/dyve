/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { NFTLoans, NFTLoansInterface } from "../../contracts/NFTLoans";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "loanedNFT",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tknAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tknId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "listingLength",
            type: "uint256",
          },
        ],
        internalType: "struct NFTListing",
        name: "listing",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61067c8061010d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638d1c3e971461005b5780638da5cb5b1461008b578063f2fde38b146100a9575b600080fd5b6100596100c5565b005b610075600480360381019061007091906103d0565b6100d9565b6040516100829190610533565b60405180910390f35b610093610182565b6040516100a091906104d8565b60405180910390f35b6100c360048036038101906100be91906103a3565b6101ab565b005b6100cd61022f565b6100d760006102ad565b565b600160205281600052604060002060205280600052604060002060009150915050806000016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481525050905081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101b361022f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610223576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021a906104f3565b60405180910390fd5b61022c816102ad565b50565b610237610371565b73ffffffffffffffffffffffffffffffffffffffff16610255610182565b73ffffffffffffffffffffffffffffffffffffffff16146102ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a290610513565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60008135905061038881610618565b92915050565b60008135905061039d8161062f565b92915050565b6000602082840312156103b9576103b861059b565b5b60006103c784828501610379565b91505092915050565b600080604083850312156103e7576103e661059b565b5b60006103f585828601610379565b92505060206104068582860161038e565b9150509250929050565b6104198161055f565b82525050565b6104288161055f565b82525050565b600061043b60268361054e565b9150610446826105a0565b604082019050919050565b600061045e60208361054e565b9150610469826105ef565b602082019050919050565b60808201600082015161048a6000850182610410565b50602082015161049d60208501826104c9565b5060408201516104b060408501826104c9565b5060608201516104c360608501826104c9565b50505050565b6104d281610591565b82525050565b60006020820190506104ed600083018461041f565b92915050565b6000602082019050818103600083015261050c8161042e565b9050919050565b6000602082019050818103600083015261052c81610451565b9050919050565b60006080820190506105486000830184610474565b92915050565b600082825260208201905092915050565b600061056a82610571565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6106218161055f565b811461062c57600080fd5b50565b61063881610591565b811461064357600080fd5b5056fea26469706673582212203b7c6820a0ffa9deca86cbb5bb8b04f49bd39f00aebb68989eef948fc2dcf08964736f6c63430008070033";

type NFTLoansConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTLoansConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTLoans__factory extends ContractFactory {
  constructor(...args: NFTLoansConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTLoans> {
    return super.deploy(overrides || {}) as Promise<NFTLoans>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTLoans {
    return super.attach(address) as NFTLoans;
  }
  override connect(signer: Signer): NFTLoans__factory {
    return super.connect(signer) as NFTLoans__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTLoansInterface {
    return new utils.Interface(_abi) as NFTLoansInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTLoans {
    return new Contract(address, _abi, signerOrProvider) as NFTLoans;
  }
}
