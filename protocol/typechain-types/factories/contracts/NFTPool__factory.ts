/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { NFTPool, NFTPoolInterface } from "../../contracts/NFTPool";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "getAllCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllListedNFTs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "listedOn",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tknAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tknId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "compliance",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "dailyFee",
            type: "uint256",
          },
          {
            internalType: "enum ReturnCondition",
            name: "returnCondition",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "currency",
                type: "string",
              },
            ],
            internalType: "struct NFTCollateral",
            name: "collateral",
            type: "tuple",
          },
        ],
        internalType: "struct NFTListing[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lender",
        type: "address",
      },
    ],
    name: "getListedNFTs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "listedOn",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tknAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tknId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "compliance",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "dailyFee",
            type: "uint256",
          },
          {
            internalType: "enum ReturnCondition",
            name: "returnCondition",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "currency",
                type: "string",
              },
            ],
            internalType: "struct NFTCollateral",
            name: "collateral",
            type: "tuple",
          },
        ],
        internalType: "struct NFTListing[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lenders",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listedOn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tknAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tknId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "complianceCheck",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "dailyFee",
        type: "uint256",
      },
      {
        internalType: "enum ReturnCondition",
        name: "returnCondition",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "currency",
            type: "string",
          },
        ],
        internalType: "struct NFTCollateral",
        name: "collateral",
        type: "tuple",
      },
    ],
    name: "listNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listedNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "listedOn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tknAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tknId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "compliance",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "dailyFee",
        type: "uint256",
      },
      {
        internalType: "enum ReturnCondition",
        name: "returnCondition",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "currency",
            type: "string",
          },
        ],
        internalType: "struct NFTCollateral",
        name: "collateral",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "listedNFTCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type NFTPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTPool__factory extends ContractFactory {
  constructor(...args: NFTPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTPool> {
    return super.deploy(overrides || {}) as Promise<NFTPool>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTPool {
    return super.attach(address) as NFTPool;
  }
  override connect(signer: Signer): NFTPool__factory {
    return super.connect(signer) as NFTPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTPoolInterface {
    return new utils.Interface(_abi) as NFTPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTPool {
    return new Contract(address, _abi, signerOrProvider) as NFTPool;
  }
}
