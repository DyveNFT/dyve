/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { NFTPool, NFTPoolInterface } from "../../contracts/NFTPool";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lender",
        type: "address",
      },
    ],
    name: "getAllListedNFTs",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tknAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tknId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "listingLength",
            type: "uint256",
          },
        ],
        internalType: "struct NFTListing[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tknAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tknId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "atAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "listingLength",
        type: "uint256",
      },
    ],
    name: "listNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listedNFT",
    outputs: [
      {
        internalType: "address",
        name: "tknAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tknId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "listingLength",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "listedNFTCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6113da8061010d6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063affb16e011610066578063affb16e01461014a578063bc197c811461017a578063e3a661da146101aa578063f23a6e61146101da578063f2fde38b1461020a5761009e565b806301ffc9a7146100a35780631a9b3694146100d35780633c44a5f014610106578063715018a6146101225780638da5cb5b1461012c575b600080fd5b6100bd60048036038101906100b89190610d84565b610226565b6040516100ca9190611019565b60405180910390f35b6100ed60048036038101906100e89190610cdd565b6102a0565b6040516100fd9493929190610fb2565b60405180910390f35b610120600480360381019061011b9190610d1d565b6102fd565b005b61012a610537565b005b61013461054b565b6040516101419190610f3f565b60405180910390f35b610164600480360381019061015f9190610b3a565b610574565b6040516101719190610ff7565b60405180910390f35b610194600480360381019061018f9190610b67565b610761565b6040516101a19190611034565b60405180910390f35b6101c460048036038101906101bf9190610b3a565b610792565b6040516101d1919061108f565b60405180910390f35b6101f460048036038101906101ef9190610c43565b6107aa565b6040516102019190611034565b60405180910390f35b610224600480360381019061021f9190610b3a565b6107d9565b005b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061029957506102988261085d565b5b9050919050565b6001602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b6001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103499190611105565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060405180608001604052808673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301559050508473ffffffffffffffffffffffffffffffffffffffff1663f242432a333087876040518563ffffffff1660e01b81526004016104fe9493929190610f5a565b600060405180830381600087803b15801561051857600080fd5b505af115801561052c573d6000803e3d6000fd5b505050505050505050565b61053f6108c7565b6105496000610945565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205467ffffffffffffffff8111156105d1576105d0611276565b5b60405190808252806020026020018201604052801561060a57816020015b6105f7610a11565b8152602001906001900390816105ef5790505b50905060005b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481101561075757600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008281526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152505082828151811061073957610738611247565b5b6020026020010181905250808061074f906111cf565b915050610610565b5080915050919050565b60007fbc197c819b3e337a6f9652dd10becd7eef83032af3b9d958d3d42f6694146621905098975050505050505050565b60026020528060005260406000206000915090505481565b60007ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf9790509695505050505050565b6107e16108c7565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610851576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108489061104f565b60405180910390fd5b61085a81610945565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6108cf610a09565b73ffffffffffffffffffffffffffffffffffffffff166108ed61054b565b73ffffffffffffffffffffffffffffffffffffffff1614610943576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093a9061106f565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081525090565b600081359050610a5e8161135f565b92915050565b60008083601f840112610a7a57610a796112aa565b5b8235905067ffffffffffffffff811115610a9757610a966112a5565b5b602083019150836020820283011115610ab357610ab26112af565b5b9250929050565b600081359050610ac981611376565b92915050565b60008083601f840112610ae557610ae46112aa565b5b8235905067ffffffffffffffff811115610b0257610b016112a5565b5b602083019150836001820283011115610b1e57610b1d6112af565b5b9250929050565b600081359050610b348161138d565b92915050565b600060208284031215610b5057610b4f6112b9565b5b6000610b5e84828501610a4f565b91505092915050565b60008060008060008060008060a0898b031215610b8757610b866112b9565b5b6000610b958b828c01610a4f565b9850506020610ba68b828c01610a4f565b975050604089013567ffffffffffffffff811115610bc757610bc66112b4565b5b610bd38b828c01610a64565b9650965050606089013567ffffffffffffffff811115610bf657610bf56112b4565b5b610c028b828c01610a64565b9450945050608089013567ffffffffffffffff811115610c2557610c246112b4565b5b610c318b828c01610acf565b92509250509295985092959890939650565b60008060008060008060a08789031215610c6057610c5f6112b9565b5b6000610c6e89828a01610a4f565b9650506020610c7f89828a01610a4f565b9550506040610c9089828a01610b25565b9450506060610ca189828a01610b25565b935050608087013567ffffffffffffffff811115610cc257610cc16112b4565b5b610cce89828a01610acf565b92509250509295509295509295565b60008060408385031215610cf457610cf36112b9565b5b6000610d0285828601610a4f565b9250506020610d1385828601610b25565b9150509250929050565b60008060008060808587031215610d3757610d366112b9565b5b6000610d4587828801610a4f565b9450506020610d5687828801610b25565b9350506040610d6787828801610b25565b9250506060610d7887828801610b25565b91505092959194509250565b600060208284031215610d9a57610d996112b9565b5b6000610da884828501610aba565b91505092915050565b6000610dbd8383610ecc565b60808301905092915050565b610dd28161115b565b82525050565b610de18161115b565b82525050565b6000610df2826110ba565b610dfc81856110d2565b9350610e07836110aa565b8060005b83811015610e38578151610e1f8882610db1565b9750610e2a836110c5565b925050600181019050610e0b565b5085935050505092915050565b610e4e8161116d565b82525050565b610e5d81611179565b82525050565b6000610e706026836110f4565b9150610e7b826112be565b604082019050919050565b6000610e936004836110e3565b9150610e9e8261130d565b602082019050919050565b6000610eb66020836110f4565b9150610ec182611336565b602082019050919050565b608082016000820151610ee26000850182610dc9565b506020820151610ef56020850182610f21565b506040820151610f086040850182610f21565b506060820151610f1b6060850182610f21565b50505050565b610f2a816111c5565b82525050565b610f39816111c5565b82525050565b6000602082019050610f546000830184610dd8565b92915050565b600060a082019050610f6f6000830187610dd8565b610f7c6020830186610dd8565b610f896040830185610f30565b610f966060830184610f30565b8181036080830152610fa781610e86565b905095945050505050565b6000608082019050610fc76000830187610dd8565b610fd46020830186610f30565b610fe16040830185610f30565b610fee6060830184610f30565b95945050505050565b600060208201905081810360008301526110118184610de7565b905092915050565b600060208201905061102e6000830184610e45565b92915050565b60006020820190506110496000830184610e54565b92915050565b6000602082019050818103600083015261106881610e63565b9050919050565b6000602082019050818103600083015261108881610ea9565b9050919050565b60006020820190506110a46000830184610f30565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611110826111c5565b915061111b836111c5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111505761114f611218565b5b828201905092915050565b6000611166826111a5565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006111da826111c5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561120d5761120c611218565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f3078303000000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6113688161115b565b811461137357600080fd5b50565b61137f81611179565b811461138a57600080fd5b50565b611396816111c5565b81146113a157600080fd5b5056fea264697066735822122030e499ba4b1600767a01cb67bf5e18dd74ed52577a3675d450650e4797568daa64736f6c63430008070033";

type NFTPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTPool__factory extends ContractFactory {
  constructor(...args: NFTPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTPool> {
    return super.deploy(overrides || {}) as Promise<NFTPool>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTPool {
    return super.attach(address) as NFTPool;
  }
  override connect(signer: Signer): NFTPool__factory {
    return super.connect(signer) as NFTPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTPoolInterface {
    return new utils.Interface(_abi) as NFTPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTPool {
    return new Contract(address, _abi, signerOrProvider) as NFTPool;
  }
}
