/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  NFTLoans,
  NFTLoansInterface,
} from "../../../contracts/NFTLoanVault.sol/NFTLoans";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "listedOn",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tknAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tknId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "compliance",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "dailyFee",
            type: "uint256",
          },
          {
            internalType: "enum ReturnCondition",
            name: "returnCondition",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "currency",
                type: "string",
              },
            ],
            internalType: "struct NFTCollateral",
            name: "collateral",
            type: "tuple",
          },
        ],
        internalType: "struct NFTListing",
        name: "listing",
        type: "tuple",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "listedOn",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tknAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tknId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "compliance",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "dailyFee",
            type: "uint256",
          },
          {
            internalType: "enum ReturnCondition",
            name: "returnCondition",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "currency",
                type: "string",
              },
            ],
            internalType: "struct NFTCollateral",
            name: "collateral",
            type: "tuple",
          },
        ],
        internalType: "struct NFTListing",
        name: "listing",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "borrowAt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "loanedNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "borrowedOn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "listedOn",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tknAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tknId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "compliance",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "dailyFee",
            type: "uint256",
          },
          {
            internalType: "enum ReturnCondition",
            name: "returnCondition",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "currency",
                type: "string",
              },
            ],
            internalType: "struct NFTCollateral",
            name: "collateral",
            type: "tuple",
          },
        ],
        internalType: "struct NFTListing",
        name: "listing",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "paid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "PL",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "loanedNFTCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61150b8061010d6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638d1c3e971161005b5780638d1c3e97146100d85780638da5cb5b1461010c578063d657ee1a1461012a578063f2fde38b146101465761007d565b80631ce3ba0d14610082578063588b23e91461009e578063715018a6146100ce575b600080fd5b61009c60048036038101906100979190610e04565b610162565b005b6100b860048036038101906100b39190610d7b565b6103d9565b6040516100c591906110cc565b60405180910390f35b6100d66103f1565b005b6100f260048036038101906100ed9190610e73565b610405565b6040516101039594939291906110e7565b60405180910390f35b61011461064e565b6040516101219190611071565b60405180910390f35b610144600480360381019061013f9190610da8565b610677565b005b610160600480360381019061015b9190610d7b565b6108ed565b005b6001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546101ae91906111c4565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506040518060a0016040528083815260200184815260200160008152602001600081526020016000815250600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600082015181600001556020820151816001016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019080519060200190610339929190610abb565b506080820151816004015560a08201518160050160006101000a81548160ff0219169083600181111561036f5761036e61134f565b5b021790555060c0820151816006015560e0820151816007016000820151816000015560208201518160010190805190602001906103ad929190610abb565b5050505050604082015181600a0155606082015181600b0155608082015181600c015590505050505050565b60026020528060005260406000206000915090505481565b6103f9610971565b61040360006109ef565b565b6001602052816000526040600020602052806000526040600020600091509150508060000154908060010160405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820180546104b6906112bd565b80601f01602080910402602001604051908101604052809291908181526020018280546104e2906112bd565b801561052f5780601f106105045761010080835404028352916020019161052f565b820191906000526020600020905b81548152906001019060200180831161051257829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff1660018111156105675761056661134f565b5b60018111156105795761057861134f565b5b81526020016006820154815260200160078201604051806040016040529081600082015481526020016001820180546105b1906112bd565b80601f01602080910402602001604051908101604052809291908181526020018280546105dd906112bd565b801561062a5780601f106105ff5761010080835404028352916020019161062a565b820191906000526020600020905b81548152906001019060200180831161060d57829003601f168201915b505050505081525050815250509080600a01549080600b01549080600c0154905085565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106c391906111c4565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506040518060a0016040528042815260200183815260200160008152602001600081526020016000815250600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600082015181600001556020820151816001016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301908051906020019061084e929190610abb565b506080820151816004015560a08201518160050160006101000a81548160ff021916908360018111156108845761088361134f565b5b021790555060c0820151816006015560e0820151816007016000820151816000015560208201518160010190805190602001906108c2929190610abb565b5050505050604082015181600a0155606082015181600b0155608082015181600c0155905050505050565b6108f5610971565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610965576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095c9061108c565b60405180910390fd5b61096e816109ef565b50565b610979610ab3565b73ffffffffffffffffffffffffffffffffffffffff1661099761064e565b73ffffffffffffffffffffffffffffffffffffffff16146109ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e4906110ac565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610ac7906112bd565b90600052602060002090601f016020900481019282610ae95760008555610b30565b82601f10610b0257805160ff1916838001178555610b30565b82800160010185558215610b30579182015b82811115610b2f578251825591602001919060010190610b14565b5b509050610b3d9190610b41565b5090565b5b80821115610b5a576000816000905550600101610b42565b5090565b6000610b71610b6c84611166565b611141565b905082815260208101848484011115610b8d57610b8c6113eb565b5b610b9884828561127b565b509392505050565b600081359050610baf81611497565b92915050565b600081359050610bc4816114ae565b92915050565b600082601f830112610bdf57610bde6113dc565b5b8135610bef848260208601610b5e565b91505092915050565b600060408284031215610c0e57610c0d6113e1565b5b610c186040611141565b90506000610c2884828501610d66565b600083015250602082013567ffffffffffffffff811115610c4c57610c4b6113e6565b5b610c5884828501610bca565b60208301525092915050565b60006101008284031215610c7b57610c7a6113e1565b5b610c86610100611141565b90506000610c9684828501610d66565b6000830152506020610caa84828501610ba0565b6020830152506040610cbe84828501610d66565b604083015250606082013567ffffffffffffffff811115610ce257610ce16113e6565b5b610cee84828501610bca565b6060830152506080610d0284828501610d66565b60808301525060a0610d1684828501610bb5565b60a08301525060c0610d2a84828501610d66565b60c08301525060e082013567ffffffffffffffff811115610d4e57610d4d6113e6565b5b610d5a84828501610bf8565b60e08301525092915050565b600081359050610d75816114be565b92915050565b600060208284031215610d9157610d906113f5565b5b6000610d9f84828501610ba0565b91505092915050565b60008060408385031215610dbf57610dbe6113f5565b5b6000610dcd85828601610ba0565b925050602083013567ffffffffffffffff811115610dee57610ded6113f0565b5b610dfa85828601610c64565b9150509250929050565b600080600060608486031215610e1d57610e1c6113f5565b5b6000610e2b86828701610ba0565b935050602084013567ffffffffffffffff811115610e4c57610e4b6113f0565b5b610e5886828701610c64565b9250506040610e6986828701610d66565b9150509250925092565b60008060408385031215610e8a57610e896113f5565b5b6000610e9885828601610ba0565b9250506020610ea985828601610d66565b9150509250929050565b610ebc8161121a565b82525050565b610ecb8161121a565b82525050565b610eda81611269565b82525050565b6000610eeb82611197565b610ef581856111a2565b9350610f0581856020860161128a565b610f0e816113fa565b840191505092915050565b6000610f266026836111b3565b9150610f318261140b565b604082019050919050565b6000610f496020836111b3565b9150610f548261145a565b602082019050919050565b6000604083016000830151610f776000860182611053565b5060208301518482036020860152610f8f8282610ee0565b9150508091505092915050565b600061010083016000830151610fb56000860182611053565b506020830151610fc86020860182610eb3565b506040830151610fdb6040860182611053565b5060608301518482036060860152610ff38282610ee0565b91505060808301516110086080860182611053565b5060a083015161101b60a0860182610ed1565b5060c083015161102e60c0860182611053565b5060e083015184820360e08601526110468282610f5f565b9150508091505092915050565b61105c8161125f565b82525050565b61106b8161125f565b82525050565b60006020820190506110866000830184610ec2565b92915050565b600060208201905081810360008301526110a581610f19565b9050919050565b600060208201905081810360008301526110c581610f3c565b9050919050565b60006020820190506110e16000830184611062565b92915050565b600060a0820190506110fc6000830188611062565b818103602083015261110e8187610f9c565b905061111d6040830186611062565b61112a6060830185611062565b6111376080830184611062565b9695505050505050565b600061114b61115c565b905061115782826112ef565b919050565b6000604051905090565b600067ffffffffffffffff821115611181576111806113ad565b5b61118a826113fa565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006111cf8261125f565b91506111da8361125f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561120f5761120e611320565b5b828201905092915050565b60006112258261123f565b9050919050565b600081905061123a82611483565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006112748261122c565b9050919050565b82818337600083830152505050565b60005b838110156112a857808201518184015260208101905061128d565b838111156112b7576000848401525b50505050565b600060028204905060018216806112d557607f821691505b602082108114156112e9576112e861137e565b5b50919050565b6112f8826113fa565b810181811067ffffffffffffffff82111715611317576113166113ad565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600281106114945761149361134f565b5b50565b6114a08161121a565b81146114ab57600080fd5b50565b600281106114bb57600080fd5b50565b6114c78161125f565b81146114d257600080fd5b5056fea2646970667358221220c3d049b579da155d6839584f3cc4bbce07b9af189ec043c80992caa0c0949ada64736f6c63430008070033";

type NFTLoansConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTLoansConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTLoans__factory extends ContractFactory {
  constructor(...args: NFTLoansConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTLoans> {
    return super.deploy(overrides || {}) as Promise<NFTLoans>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTLoans {
    return super.attach(address) as NFTLoans;
  }
  override connect(signer: Signer): NFTLoans__factory {
    return super.connect(signer) as NFTLoans__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTLoansInterface {
    return new utils.Interface(_abi) as NFTLoansInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTLoans {
    return new Contract(address, _abi, signerOrProvider) as NFTLoans;
  }
}
