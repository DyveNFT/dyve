/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { NFTFinder, NFTFinderInterface } from "../../contracts/NFTFinder";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tknAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tknId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "listingLength",
            type: "uint256",
          },
        ],
        internalType: "struct NFTListing",
        name: "listing",
        type: "tuple",
      },
    ],
    name: "getMatch",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tknAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tknId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "listingLength",
                type: "uint256",
              },
            ],
            internalType: "struct NFTListing",
            name: "listing",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "tknAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tknId",
            type: "uint256",
          },
        ],
        internalType: "struct NFTRecommendation",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tknAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tknId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "listingLength",
            type: "uint256",
          },
        ],
        internalType: "struct NFTListing",
        name: "listing",
        type: "tuple",
      },
    ],
    name: "getMatchTknId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "recommendation",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tknAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tknId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "listingLength",
            type: "uint256",
          },
        ],
        internalType: "struct NFTListing",
        name: "listing",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tknAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tknId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tknAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tknId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "listingLength",
            type: "uint256",
          },
        ],
        internalType: "struct NFTListing",
        name: "listing",
        type: "tuple",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tknAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tknId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "listingLength",
            type: "uint256",
          },
        ],
        internalType: "struct NFTListing",
        name: "listing",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "recommendedCollection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "recommendedId",
        type: "uint256",
      },
    ],
    name: "updateMatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61110a8061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ff578063a2f3c1601461011d578063e70121bb1461014f578063f2fde38b1461017f57610088565b806315356c6a1461008d5780633cf8cc78146100a95780634171109a146100c5578063715018a6146100f5575b600080fd5b6100a760048036038101906100a29190610bb7565b61019b565b005b6100c360048036038101906100be9190610be4565b61037b565b005b6100df60048036038101906100da9190610bb7565b61055e565b6040516100ec9190610e64565b60405180910390f35b6100fd610784565b005b610107610798565b6040516101149190610dd2565b60405180910390f35b61013760048036038101906101329190610c37565b6107c1565b60405161014693929190610e2d565b60405180910390f35b61016960048036038101906101649190610bb7565b610889565b6040516101769190610e7f565b60405180910390f35b61019960048036038101906101949190610b8a565b61089f565b005b6000805b6001805490508110156102dd57826000015173ffffffffffffffffffffffffffffffffffffffff16600182815481106101db576101da610fb5565b5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015610258575082602001516001828154811061024457610243610fb5565b5b906000526020600020906004020160010154145b801561028c575082604001516001828154811061027857610277610fb5565b5b906000526020600020906004020160020154145b80156102c057508260600151600182815481106102ac576102ab610fb5565b5b906000526020600020906004020160030154145b156102ca57600191505b80806102d590610f3d565b91505061019f565b508061037757600182908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015550505b5050565b60005b60018054905081101561055857836000015173ffffffffffffffffffffffffffffffffffffffff16600182815481106103ba576103b9610fb5565b5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015610437575083602001516001828154811061042357610422610fb5565b5b906000526020600020906004020160010154145b156105455760405180606001604052808581526020018473ffffffffffffffffffffffffffffffffffffffff168152602001838152506002600083815260200190815260200160002060008201518160000160008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030155505060208201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600501559050505b808061055090610f3d565b91505061037e565b50505050565b610566610a6d565b60005b60018054905081101561074857826000015173ffffffffffffffffffffffffffffffffffffffff16600182815481106105a5576105a4610fb5565b5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015610622575082602001516001828154811061060e5761060d610fb5565b5b906000526020600020906004020160010154145b156107355760026000828152602001908152602001600020604051806060016040529081600082016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152505081526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152505091505061077f565b808061074090610f3d565b915050610569565b506040518060600160405280838152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090505b919050565b61078c610923565b61079660006109a1565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6002602052806000526040600020600091509050806000016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481525050908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154905083565b60006108948261055e565b604001519050919050565b6108a7610923565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610917576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090e90610ded565b60405180910390fd5b610920816109a1565b50565b61092b610a65565b73ffffffffffffffffffffffffffffffffffffffff16610949610798565b73ffffffffffffffffffffffffffffffffffffffff161461099f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099690610e0d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060600160405280610a80610aaa565b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081525090565b600081359050610af7816110a6565b92915050565b600060808284031215610b1357610b12611013565b5b610b1d6080610e9a565b90506000610b2d84828501610ae8565b6000830152506020610b4184828501610b75565b6020830152506040610b5584828501610b75565b6040830152506060610b6984828501610b75565b60608301525092915050565b600081359050610b84816110bd565b92915050565b600060208284031215610ba057610b9f611018565b5b6000610bae84828501610ae8565b91505092915050565b600060808284031215610bcd57610bcc611018565b5b6000610bdb84828501610afd565b91505092915050565b600080600060c08486031215610bfd57610bfc611018565b5b6000610c0b86828701610afd565b9350506080610c1c86828701610ae8565b92505060a0610c2d86828701610b75565b9150509250925092565b600060208284031215610c4d57610c4c611018565b5b6000610c5b84828501610b75565b91505092915050565b610c6d81610ed0565b82525050565b610c7c81610ed0565b82525050565b6000610c8f602683610ebf565b9150610c9a8261102e565b604082019050919050565b6000610cb2602083610ebf565b9150610cbd8261107d565b602082019050919050565b608082016000820151610cde6000850182610c64565b506020820151610cf16020850182610db4565b506040820151610d046040850182610db4565b506060820151610d176060850182610db4565b50505050565b608082016000820151610d336000850182610c64565b506020820151610d466020850182610db4565b506040820151610d596040850182610db4565b506060820151610d6c6060850182610db4565b50505050565b60c082016000820151610d886000850182610cc8565b506020820151610d9b6080850182610c64565b506040820151610dae60a0850182610db4565b50505050565b610dbd81610f02565b82525050565b610dcc81610f02565b82525050565b6000602082019050610de76000830184610c73565b92915050565b60006020820190508181036000830152610e0681610c82565b9050919050565b60006020820190508181036000830152610e2681610ca5565b9050919050565b600060c082019050610e426000830186610d1d565b610e4f6080830185610c73565b610e5c60a0830184610dc3565b949350505050565b600060c082019050610e796000830184610d72565b92915050565b6000602082019050610e946000830184610dc3565b92915050565b6000610ea4610eb5565b9050610eb08282610f0c565b919050565b6000604051905090565b600082825260208201905092915050565b6000610edb82610ee2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610f158261101d565b810181811067ffffffffffffffff82111715610f3457610f33610fe4565b5b80604052505050565b6000610f4882610f02565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f7b57610f7a610f86565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6110af81610ed0565b81146110ba57600080fd5b50565b6110c681610f02565b81146110d157600080fd5b5056fea26469706673582212208a308ee1cd12f3def4dcd5f21bf68f75831d23590079863d6fb4aeae47c11a5c64736f6c63430008070033";

type NFTFinderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTFinderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTFinder__factory extends ContractFactory {
  constructor(...args: NFTFinderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTFinder> {
    return super.deploy(overrides || {}) as Promise<NFTFinder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTFinder {
    return super.attach(address) as NFTFinder;
  }
  override connect(signer: Signer): NFTFinder__factory {
    return super.connect(signer) as NFTFinder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTFinderInterface {
    return new utils.Interface(_abi) as NFTFinderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTFinder {
    return new Contract(address, _abi, signerOrProvider) as NFTFinder;
  }
}
