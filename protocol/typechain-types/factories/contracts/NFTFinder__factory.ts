/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { NFTFinder, NFTFinderInterface } from "../../contracts/NFTFinder";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "listedOn",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tknAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tknId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "listingLength",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "compliance",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "dailyFee",
            type: "uint256",
          },
          {
            internalType: "enum ReturnCondition",
            name: "returnCondition",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "currency",
                type: "string",
              },
            ],
            internalType: "struct NFTCollateral",
            name: "collateral",
            type: "tuple",
          },
        ],
        internalType: "struct NFTListing",
        name: "listing",
        type: "tuple",
      },
    ],
    name: "getMatch",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "listedOn",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tknAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tknId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "listingLength",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "compliance",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "dailyFee",
                type: "uint256",
              },
              {
                internalType: "enum ReturnCondition",
                name: "returnCondition",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "expiry",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256",
                  },
                  {
                    internalType: "string",
                    name: "currency",
                    type: "string",
                  },
                ],
                internalType: "struct NFTCollateral",
                name: "collateral",
                type: "tuple",
              },
            ],
            internalType: "struct NFTListing",
            name: "listing",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "tknAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tknId",
            type: "uint256",
          },
        ],
        internalType: "struct NFTRecommendation",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "listedOn",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tknAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tknId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "listingLength",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "compliance",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "dailyFee",
            type: "uint256",
          },
          {
            internalType: "enum ReturnCondition",
            name: "returnCondition",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "currency",
                type: "string",
              },
            ],
            internalType: "struct NFTCollateral",
            name: "collateral",
            type: "tuple",
          },
        ],
        internalType: "struct NFTListing",
        name: "listing",
        type: "tuple",
      },
    ],
    name: "getMatchTknId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "recommendation",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "listedOn",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tknAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tknId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "listingLength",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "compliance",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "dailyFee",
            type: "uint256",
          },
          {
            internalType: "enum ReturnCondition",
            name: "returnCondition",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "currency",
                type: "string",
              },
            ],
            internalType: "struct NFTCollateral",
            name: "collateral",
            type: "tuple",
          },
        ],
        internalType: "struct NFTListing",
        name: "listing",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tknAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tknId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "listedOn",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tknAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tknId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "listingLength",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "compliance",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "dailyFee",
            type: "uint256",
          },
          {
            internalType: "enum ReturnCondition",
            name: "returnCondition",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "currency",
                type: "string",
              },
            ],
            internalType: "struct NFTCollateral",
            name: "collateral",
            type: "tuple",
          },
        ],
        internalType: "struct NFTListing",
        name: "listing",
        type: "tuple",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "listedOn",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tknAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tknId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "listingLength",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "compliance",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "dailyFee",
            type: "uint256",
          },
          {
            internalType: "enum ReturnCondition",
            name: "returnCondition",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "currency",
                type: "string",
              },
            ],
            internalType: "struct NFTCollateral",
            name: "collateral",
            type: "tuple",
          },
        ],
        internalType: "struct NFTListing",
        name: "listing",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "recommendedCollection",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "recommendedId",
        type: "uint256",
      },
    ],
    name: "updateMatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611b938061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80638da5cb5b1161005b5780638da5cb5b146100fe578063a2f3c1601461011c578063cd5391cd1461014e578063f2fde38b1461017e57610087565b80625ebb581461008c57806307a08a7a146100a857806356179d7c146100c4578063715018a6146100f4575b600080fd5b6100a660048036038101906100a1919061131c565b61019a565b005b6100c260048036038101906100bd91906112d3565b61041c565b005b6100de60048036038101906100d991906112d3565b61069b565b6040516100eb919061176a565b60405180910390f35b6100fc610a5d565b005b610106610a71565b60405161011391906116d1565b60405180910390f35b6101366004803603810190610131919061138b565b610a9a565b6040516101459392919061172c565b60405180910390f35b610168600480360381019061016391906112d3565b610cfe565b604051610175919061178c565b60405180910390f35b610198600480360381019061019391906112a6565b610d14565b005b60005b60018054905081101561041657836020015173ffffffffffffffffffffffffffffffffffffffff16600182815481106101d9576101d8611a06565b5b90600052602060002090600b020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015610256575083604001516001828154811061024257610241611a06565b5b90600052602060002090600b020160020154145b156104035760405180606001604052808581526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815250600260008381526020019081526020016000206000820151816000016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005019080519060200190610333929190610ee2565b5060c0820151816006015560e08201518160070160006101000a81548160ff02191690836001811115610369576103686119a8565b5b02179055506101008201518160080155610120820151816009016000820151816000015560208201518160010190805190602001906103a9929190610ee2565b5050505050602082015181600b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600c01559050505b808061040e90611930565b91505061019d565b50505050565b6000805b60018054905081101561055e57826020015173ffffffffffffffffffffffffffffffffffffffff166001828154811061045c5761045b611a06565b5b90600052602060002090600b020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156104d957508260400151600182815481106104c5576104c4611a06565b5b90600052602060002090600b020160020154145b801561050d57508260600151600182815481106104f9576104f8611a06565b5b90600052602060002090600b020160030154145b8015610541575082608001516001828154811061052d5761052c611a06565b5b90600052602060002090600b020160040154145b1561054b57600191505b808061055690611930565b915050610420565b50806106975760018290806001815401808255809150506001900390600052602060002090600b02016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a082015181600501908051906020019061061b929190610ee2565b5060c0820151816006015560e08201518160070160006101000a81548160ff02191690836001811115610651576106506119a8565b5b0217905550610100820151816008015561012082015181600901600082015181600001556020820151816001019080519060200190610691929190610ee2565b50505050505b5050565b6106a3610f68565b60005b600180549050811015610a2157826020015173ffffffffffffffffffffffffffffffffffffffff16600182815481106106e2576106e1611a06565b5b90600052602060002090600b020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561075f575082604001516001828154811061074b5761074a611a06565b5b90600052602060002090600b020160020154145b15610a0e57600260008281526020019081526020016000206040518060600160405290816000820160405180610140016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820154815260200160048201548152602001600582018054610821906118cd565b80601f016020809104026020016040519081016040528092919081815260200182805461084d906118cd565b801561089a5780601f1061086f5761010080835404028352916020019161089a565b820191906000526020600020905b81548152906001019060200180831161087d57829003601f168201915b50505050508152602001600682015481526020016007820160009054906101000a900460ff1660018111156108d2576108d16119a8565b5b60018111156108e4576108e36119a8565b5b815260200160088201548152602001600982016040518060400160405290816000820154815260200160018201805461091c906118cd565b80601f0160208091040260200160405190810160405280929190818152602001828054610948906118cd565b80156109955780601f1061096a57610100808354040283529160200191610995565b820191906000526020600020905b81548152906001019060200180831161097857829003601f168201915b505050505081525050815250508152602001600b820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600c82015481525050915050610a58565b8080610a1990611930565b9150506106a6565b506040518060600160405280838152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090505b919050565b610a65610d98565b610a6f6000610e16565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026020528060005260406000206000915090508060000160405180610140016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820154815260200160048201548152602001600582018054610b4c906118cd565b80601f0160208091040260200160405190810160405280929190818152602001828054610b78906118cd565b8015610bc55780601f10610b9a57610100808354040283529160200191610bc5565b820191906000526020600020905b815481529060010190602001808311610ba857829003601f168201915b50505050508152602001600682015481526020016007820160009054906101000a900460ff166001811115610bfd57610bfc6119a8565b5b6001811115610c0f57610c0e6119a8565b5b8152602001600882015481526020016009820160405180604001604052908160008201548152602001600182018054610c47906118cd565b80601f0160208091040260200160405190810160405280929190818152602001828054610c73906118cd565b8015610cc05780601f10610c9557610100808354040283529160200191610cc0565b820191906000526020600020905b815481529060010190602001808311610ca357829003601f168201915b505050505081525050815250509080600b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600c0154905083565b6000610d098261069b565b604001519050919050565b610d1c610d98565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d83906116ec565b60405180910390fd5b610d9581610e16565b50565b610da0610eda565b73ffffffffffffffffffffffffffffffffffffffff16610dbe610a71565b73ffffffffffffffffffffffffffffffffffffffff1614610e14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0b9061170c565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610eee906118cd565b90600052602060002090601f016020900481019282610f105760008555610f57565b82601f10610f2957805160ff1916838001178555610f57565b82800160010185558215610f57579182015b82811115610f56578251825591602001919060010190610f3b565b5b509050610f649190610fa5565b5090565b6040518060600160405280610f7b610fc2565b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b5b80821115610fbe576000816000905550600101610fa6565b5090565b60405180610140016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001606081526020016000815260200160006001811115611029576110286119a8565b5b81526020016000815260200161103d611043565b81525090565b604051806040016040528060008152602001606081525090565b600061107061106b846117cc565b6117a7565b90508281526020810184848401111561108c5761108b611a73565b5b61109784828561188b565b509392505050565b6000813590506110ae81611b1f565b92915050565b6000813590506110c381611b36565b92915050565b600082601f8301126110de576110dd611a64565b5b81356110ee84826020860161105d565b91505092915050565b60006040828403121561110d5761110c611a69565b5b61111760406117a7565b9050600061112784828501611291565b600083015250602082013567ffffffffffffffff81111561114b5761114a611a6e565b5b611157848285016110c9565b60208301525092915050565b6000610140828403121561117a57611179611a69565b5b6111856101406117a7565b9050600061119584828501611291565b60008301525060206111a98482850161109f565b60208301525060406111bd84828501611291565b60408301525060606111d184828501611291565b60608301525060806111e584828501611291565b60808301525060a082013567ffffffffffffffff81111561120957611208611a6e565b5b611215848285016110c9565b60a08301525060c061122984828501611291565b60c08301525060e061123d848285016110b4565b60e08301525061010061125284828501611291565b6101008301525061012082013567ffffffffffffffff81111561127857611277611a6e565b5b611284848285016110f7565b6101208301525092915050565b6000813590506112a081611b46565b92915050565b6000602082840312156112bc576112bb611a7d565b5b60006112ca8482850161109f565b91505092915050565b6000602082840312156112e9576112e8611a7d565b5b600082013567ffffffffffffffff81111561130757611306611a78565b5b61131384828501611163565b91505092915050565b60008060006060848603121561133557611334611a7d565b5b600084013567ffffffffffffffff81111561135357611352611a78565b5b61135f86828701611163565b93505060206113708682870161109f565b925050604061138186828701611291565b9150509250925092565b6000602082840312156113a1576113a0611a7d565b5b60006113af84828501611291565b91505092915050565b6113c18161182a565b82525050565b6113d08161182a565b82525050565b6113df81611879565b82525050565b60006113f0826117fd565b6113fa8185611808565b935061140a81856020860161189a565b61141381611a82565b840191505092915050565b600061142b602683611819565b915061143682611a93565b604082019050919050565b600061144e602083611819565b915061145982611ae2565b602082019050919050565b600060408301600083015161147c60008601826116b3565b506020830151848203602086015261149482826113e5565b9150508091505092915050565b6000610140830160008301516114ba60008601826116b3565b5060208301516114cd60208601826113b8565b5060408301516114e060408601826116b3565b5060608301516114f360608601826116b3565b50608083015161150660808601826116b3565b5060a083015184820360a086015261151e82826113e5565b91505060c083015161153360c08601826116b3565b5060e083015161154660e08601826113d6565b5061010083015161155b6101008601826116b3565b506101208301518482036101208601526115758282611464565b9150508091505092915050565b60006101408301600083015161159b60008601826116b3565b5060208301516115ae60208601826113b8565b5060408301516115c160408601826116b3565b5060608301516115d460608601826116b3565b5060808301516115e760808601826116b3565b5060a083015184820360a08601526115ff82826113e5565b91505060c083015161161460c08601826116b3565b5060e083015161162760e08601826113d6565b5061010083015161163c6101008601826116b3565b506101208301518482036101208601526116568282611464565b9150508091505092915050565b6000606083016000830151848203600086015261168082826114a1565b915050602083015161169560208601826113b8565b5060408301516116a860408601826116b3565b508091505092915050565b6116bc8161186f565b82525050565b6116cb8161186f565b82525050565b60006020820190506116e660008301846113c7565b92915050565b600060208201905081810360008301526117058161141e565b9050919050565b6000602082019050818103600083015261172581611441565b9050919050565b600060608201905081810360008301526117468186611582565b905061175560208301856113c7565b61176260408301846116c2565b949350505050565b600060208201905081810360008301526117848184611663565b905092915050565b60006020820190506117a160008301846116c2565b92915050565b60006117b16117c2565b90506117bd82826118ff565b919050565b6000604051905090565b600067ffffffffffffffff8211156117e7576117e6611a35565b5b6117f082611a82565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006118358261184f565b9050919050565b600081905061184a82611b0b565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006118848261183c565b9050919050565b82818337600083830152505050565b60005b838110156118b857808201518184015260208101905061189d565b838111156118c7576000848401525b50505050565b600060028204905060018216806118e557607f821691505b602082108114156118f9576118f86119d7565b5b50919050565b61190882611a82565b810181811067ffffffffffffffff8211171561192757611926611a35565b5b80604052505050565b600061193b8261186f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561196e5761196d611979565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60028110611b1c57611b1b6119a8565b5b50565b611b288161182a565b8114611b3357600080fd5b50565b60028110611b4357600080fd5b50565b611b4f8161186f565b8114611b5a57600080fd5b5056fea2646970667358221220c6945eecfcab052e4c5178c48fd150192d58ce0e6925e41c2b725f6541f392c864736f6c63430008070033";

type NFTFinderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTFinderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTFinder__factory extends ContractFactory {
  constructor(...args: NFTFinderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTFinder> {
    return super.deploy(overrides || {}) as Promise<NFTFinder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTFinder {
    return super.attach(address) as NFTFinder;
  }
  override connect(signer: Signer): NFTFinder__factory {
    return super.connect(signer) as NFTFinder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTFinderInterface {
    return new utils.Interface(_abi) as NFTFinderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTFinder {
    return new Contract(address, _abi, signerOrProvider) as NFTFinder;
  }
}
