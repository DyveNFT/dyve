/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NFTLoanVault,
  NFTLoanVaultInterface,
} from "../../contracts/NFTLoanVault";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "listedOn",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tknAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tknId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "compliance",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "dailyFee",
            type: "uint256",
          },
          {
            internalType: "enum ReturnCondition",
            name: "returnCondition",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "currency",
                type: "string",
              },
            ],
            internalType: "struct NFTCollateral",
            name: "collateral",
            type: "tuple",
          },
        ],
        internalType: "struct NFTListing",
        name: "listing",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "loanExpiry",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "listedOn",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tknAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tknId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "compliance",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "dailyFee",
            type: "uint256",
          },
          {
            internalType: "enum ReturnCondition",
            name: "returnCondition",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "currency",
                type: "string",
              },
            ],
            internalType: "struct NFTCollateral",
            name: "collateral",
            type: "tuple",
          },
        ],
        internalType: "struct NFTListing",
        name: "listing",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "loanExpiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borroweOn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price2",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "pl",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "returnTknId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "returnedCollectionAdress",
        type: "address",
      },
      {
        internalType: "enum NFTLoanVault.LoanStatus",
        name: "loanStatus",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "returnedOn",
        type: "uint256",
      },
    ],
    name: "borrowedOn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "borrowers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "loanedNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "borrowedOn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "listedOn",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tknAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tknId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "compliance",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "dailyFee",
            type: "uint256",
          },
          {
            internalType: "enum ReturnCondition",
            name: "returnCondition",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "currency",
                type: "string",
              },
            ],
            internalType: "struct NFTCollateral",
            name: "collateral",
            type: "tuple",
          },
        ],
        internalType: "struct NFTListing",
        name: "listing",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "sold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "paid",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "PL",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "loanExpiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "returnedTknId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "returnedCollectionAddress",
        type: "address",
      },
      {
        internalType: "enum NFTLoanVault.LoanStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "returnedOn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "loanedNFTCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6119778061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638d1c3e971161005b5780638d1c3e97146101135780638da5cb5b1461014c578063ebc545821461016a578063f2fde38b1461018657610088565b806344b3b1191461008d578063588b23e9146100a9578063715018a6146100d95780637924d93f146100e3575b600080fd5b6100a760048036038101906100a29190611062565b6101a2565b005b6100c360048036038101906100be9190611035565b6104fb565b6040516100d09190611485565b60405180910390f35b6100e1610513565b005b6100fd60048036038101906100f89190611221565b610527565b60405161010a919061142a565b60405180910390f35b61012d600480360381019061012891906111e1565b610566565b6040516101439a999897969594939291906114a0565b60405180910390f35b6101546107fa565b604051610161919061142a565b60405180910390f35b610184600480360381019061017f91906110d1565b610823565b005b6101a0600480360381019061019b9190611035565b610b7d565b005b6001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546101ee91906115c6565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060405180610140016040528042815260200184815260200160008152602001600081526020016000815260200183815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600060038111156102e0576102df611780565b5b81526020016000815250600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600082015181600001556020820151816001016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030190805190602001906103c4929190610d4b565b506080820151816004015560a08201518160050160006101000a81548160ff021916908360018111156103fa576103f9611780565b5b021790555060c0820151816006015560e082015181600701600082015181600001556020820151816001019080519060200190610438929190610d4b565b5050505050604082015181600a0155606082015181600b0155608082015181600c015560a082015181600d015560c082015181600e015560e082015181600f0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061010082015181600f0160146101000a81548160ff021916908360038111156104e2576104e1611780565b5b0217905550610120820151816010015590505050505050565b60046020528060005260406000206000915090505481565b61051b610c01565b6105256000610c7f565b565b6003818154811061053757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001602052816000526040600020602052806000526040600020600091509150508060000154908060010160405180610100016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382018054610617906116ee565b80601f0160208091040260200160405190810160405280929190818152602001828054610643906116ee565b80156106905780601f1061066557610100808354040283529160200191610690565b820191906000526020600020905b81548152906001019060200180831161067357829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff1660018111156106c8576106c7611780565b5b60018111156106da576106d9611780565b5b8152602001600682015481526020016007820160405180604001604052908160008201548152602001600182018054610712906116ee565b80601f016020809104026020016040519081016040528092919081815260200182805461073e906116ee565b801561078b5780601f106107605761010080835404028352916020019161078b565b820191906000526020600020905b81548152906001019060200180831161076e57829003601f168201915b505050505081525050815250509080600a01549080600b01549080600c01549080600d01549080600e01549080600f0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600f0160149054906101000a900460ff1690806010015490508a565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001600460008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461086f91906115c6565b600460008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600460008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506040518061014001604052808a81526020018c81526020018981526020018881526020018781526020018b81526020018681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184600381111561095b5761095a611780565b5b815260200183815250600160008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600082015181600001556020820151816001016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019080519060200190610a3e929190610d4b565b506080820151816004015560a08201518160050160006101000a81548160ff02191690836001811115610a7457610a73611780565b5b021790555060c0820151816006015560e082015181600701600082015181600001556020820151816001019080519060200190610ab2929190610d4b565b5050505050604082015181600a0155606082015181600b0155608082015181600c015560a082015181600d015560c082015181600e015560e082015181600f0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061010082015181600f0160146101000a81548160ff02191690836003811115610b5c57610b5b611780565b5b02179055506101208201518160100155905050505050505050505050505050565b610b85610c01565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610bf5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bec90611445565b60405180910390fd5b610bfe81610c7f565b50565b610c09610d43565b73ffffffffffffffffffffffffffffffffffffffff16610c276107fa565b73ffffffffffffffffffffffffffffffffffffffff1614610c7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7490611465565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610d57906116ee565b90600052602060002090601f016020900481019282610d795760008555610dc0565b82601f10610d9257805160ff1916838001178555610dc0565b82800160010185558215610dc0579182015b82811115610dbf578251825591602001919060010190610da4565b5b509050610dcd9190610dd1565b5090565b5b80821115610dea576000816000905550600101610dd2565b5090565b6000610e01610dfc84611568565b611543565b905082815260208101848484011115610e1d57610e1c61181c565b5b610e288482856116ac565b509392505050565b600081359050610e3f816118dc565b92915050565b600081359050610e54816118f3565b92915050565b600081359050610e6981611903565b92915050565b600081359050610e7e81611913565b92915050565b600082601f830112610e9957610e9861180d565b5b8135610ea9848260208601610dee565b91505092915050565b600060408284031215610ec857610ec7611812565b5b610ed26040611543565b90506000610ee284828501611020565b600083015250602082013567ffffffffffffffff811115610f0657610f05611817565b5b610f1284828501610e84565b60208301525092915050565b60006101008284031215610f3557610f34611812565b5b610f40610100611543565b90506000610f5084828501611020565b6000830152506020610f6484828501610e30565b6020830152506040610f7884828501611020565b604083015250606082013567ffffffffffffffff811115610f9c57610f9b611817565b5b610fa884828501610e84565b6060830152506080610fbc84828501611020565b60808301525060a0610fd084828501610e5a565b60a08301525060c0610fe484828501611020565b60c08301525060e082013567ffffffffffffffff81111561100857611007611817565b5b61101484828501610eb2565b60e08301525092915050565b60008135905061102f8161192a565b92915050565b60006020828403121561104b5761104a611826565b5b600061105984828501610e30565b91505092915050565b60008060006060848603121561107b5761107a611826565b5b600061108986828701610e30565b935050602084013567ffffffffffffffff8111156110aa576110a9611821565b5b6110b686828701610f1e565b92505060406110c786828701611020565b9150509250925092565b60008060008060008060008060008060006101608c8e0312156110f7576110f6611826565b5b60006111058e828f01610e30565b9b505060208c013567ffffffffffffffff81111561112657611125611821565b5b6111328e828f01610f1e565b9a505060406111438e828f01611020565b99505060606111548e828f01611020565b98505060806111658e828f01611020565b97505060a06111768e828f01611020565b96505060c06111878e828f01610e6f565b95505060e06111988e828f01611020565b9450506101006111aa8e828f01610e30565b9350506101206111bc8e828f01610e45565b9250506101406111ce8e828f01611020565b9150509295989b509295989b9093969950565b600080604083850312156111f8576111f7611826565b5b600061120685828601610e30565b925050602061121785828601611020565b9150509250929050565b60006020828403121561123757611236611826565b5b600061124584828501611020565b91505092915050565b6112578161161c565b82525050565b6112668161161c565b82525050565b61127581611688565b82525050565b6112848161169a565b82525050565b61129381611654565b82525050565b60006112a482611599565b6112ae81856115a4565b93506112be8185602086016116bb565b6112c78161182b565b840191505092915050565b60006112df6026836115b5565b91506112ea8261183c565b604082019050919050565b60006113026020836115b5565b915061130d8261188b565b602082019050919050565b6000604083016000830151611330600086018261140c565b50602083015184820360208601526113488282611299565b9150508091505092915050565b60006101008301600083015161136e600086018261140c565b506020830151611381602086018261124e565b506040830151611394604086018261140c565b50606083015184820360608601526113ac8282611299565b91505060808301516113c1608086018261140c565b5060a08301516113d460a086018261127b565b5060c08301516113e760c086018261140c565b5060e083015184820360e08601526113ff8282611318565b9150508091505092915050565b6114158161167e565b82525050565b6114248161167e565b82525050565b600060208201905061143f600083018461125d565b92915050565b6000602082019050818103600083015261145e816112d2565b9050919050565b6000602082019050818103600083015261147e816112f5565b9050919050565b600060208201905061149a600083018461141b565b92915050565b6000610140820190506114b6600083018d61141b565b81810360208301526114c8818c611355565b90506114d7604083018b61141b565b6114e4606083018a61141b565b6114f1608083018961128a565b6114fe60a083018861141b565b61150b60c083018761141b565b61151860e083018661125d565b61152661010083018561126c565b61153461012083018461141b565b9b9a5050505050505050505050565b600061154d61155e565b90506115598282611720565b919050565b6000604051905090565b600067ffffffffffffffff821115611583576115826117de565b5b61158c8261182b565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006115d18261167e565b91506115dc8361167e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561161157611610611751565b5b828201905092915050565b60006116278261165e565b9050919050565b600081905061163c826118b4565b919050565b600081905061164f826118c8565b919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116938261162e565b9050919050565b60006116a582611641565b9050919050565b82818337600083830152505050565b60005b838110156116d95780820151818401526020810190506116be565b838111156116e8576000848401525b50505050565b6000600282049050600182168061170657607f821691505b6020821081141561171a576117196117af565b5b50919050565b6117298261182b565b810181811067ffffffffffffffff82111715611748576117476117de565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600481106118c5576118c4611780565b5b50565b600281106118d9576118d8611780565b5b50565b6118e58161161c565b81146118f057600080fd5b50565b6004811061190057600080fd5b50565b6002811061191057600080fd5b50565b61191c81611654565b811461192757600080fd5b50565b6119338161167e565b811461193e57600080fd5b5056fea2646970667358221220bbb8768dac2a74ba7136ebf1f221795d5a447905b63bd4135c422e724ace4ed764736f6c63430008070033";

type NFTLoanVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTLoanVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTLoanVault__factory extends ContractFactory {
  constructor(...args: NFTLoanVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTLoanVault> {
    return super.deploy(overrides || {}) as Promise<NFTLoanVault>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTLoanVault {
    return super.attach(address) as NFTLoanVault;
  }
  override connect(signer: Signer): NFTLoanVault__factory {
    return super.connect(signer) as NFTLoanVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTLoanVaultInterface {
    return new utils.Interface(_abi) as NFTLoanVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTLoanVault {
    return new Contract(address, _abi, signerOrProvider) as NFTLoanVault;
  }
}
