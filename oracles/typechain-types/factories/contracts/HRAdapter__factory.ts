/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { HRAdapter, HRAdapterInterface } from "../../contracts/HRAdapter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkRequested",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_result",
        type: "uint256",
      },
    ],
    name: "fulfill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "jobId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requestEligibilityOffChain",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "result",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "setOracleAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_jobId",
        type: "string",
      },
    ],
    name: "setOracleJobId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016004553480156200001657600080fd5b50620000276200009960201b60201c565b737cbf93692cbba821e69660221ce604e73a80b40f600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060088190555067016345785d8a000060098190555062000221565b6200013f73c89bd4e1632d3a43cb03aaad5262cbe4038bc57173ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b815260040160206040518083038186803b158015620000f857600080fd5b505afa1580156200010d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200013391906200019c565b6200014160201b60201c565b565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081519050620001968162000207565b92915050565b600060208284031215620001b557620001b462000202565b5b6000620001c58482850162000185565b91505092915050565b6000620001db82620001e2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200021281620001ce565b81146200021e57600080fd5b50565b61103380620002316000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063653721471161005b57806365372147146100d85780637dc0d1d0146100f657806387da253d14610114578063c2939d97146101305761007d565b80634357855e146100825780634c69c00f1461009e5780635461d3f5146100ba575b600080fd5b61009c600480360381019061009791906108bf565b61014e565b005b6100b860048036038101906100b39190610865565b61025f565b005b6100c26102a3565b6040516100cf9190610b3b565b60405180910390f35b6100e06102f1565b6040516100ed9190610b96565b60405180910390f35b6100fe6102f7565b60405161010b9190610a5d565b60405180910390f35b61012e600480360381019061012991906108ff565b61031d565b005b61013861032f565b6040516101459190610b3b565b60405180910390f35b816005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e790610b76565b60405180910390fd5b6005600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055807f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a60405160405180910390a281600681905550505050565b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806102ba60085430634357855e60e01b610335565b90506102eb600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600954610366565b91505090565b60065481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61032681610432565b60088190555050565b60085481565b61033d61071a565b61034561071a565b61035c8585858461045c909392919063ffffffff16565b9150509392505050565b600080600454905060018161037b9190610c34565b6004819055506000634042994660e01b60008087600001513089604001518760018c60800151600001516040516024016103bc989796959493929190610a78565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506104278683868461050c565b925050509392505050565b60008082905060008151141561044e576000801b915050610457565b60208301519150505b919050565b61046461071a565b61047485608001516101006106b0565b508385600001818152505082856020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508185604001907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050849050949350505050565b60003084604051602001610521929190610a31565b604051602081830303815290604052805190602001209050846005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550807fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af960405160405180910390a2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634000aea08685856040518463ffffffff1660e01b815260040161061793929190610afd565b602060405180830381600087803b15801561063157600080fd5b505af1158015610645573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106699190610892565b6106a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069f90610b56565b60405180910390fd5b949350505050565b6106b8610787565b60006020836106c79190610e13565b146106f3576020826106d99190610e13565b60206106e59190610c8a565b826106f09190610c34565b91505b81836020018181525050604051808452600081528281016020016040525082905092915050565b6040518060a0016040528060008019168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200160008152602001610781610787565b81525090565b604051806040016040528060608152602001600081525090565b60006107b46107af84610bd6565b610bb1565b9050828152602081018484840111156107d0576107cf610ed6565b5b6107db848285610d72565b509392505050565b6000813590506107f281610fa1565b92915050565b60008151905061080781610fb8565b92915050565b60008135905061081c81610fcf565b92915050565b600082601f83011261083757610836610ed1565b5b81356108478482602086016107a1565b91505092915050565b60008135905061085f81610fe6565b92915050565b60006020828403121561087b5761087a610ee0565b5b6000610889848285016107e3565b91505092915050565b6000602082840312156108a8576108a7610ee0565b5b60006108b6848285016107f8565b91505092915050565b600080604083850312156108d6576108d5610ee0565b5b60006108e48582860161080d565b92505060206108f585828601610850565b9150509250929050565b60006020828403121561091557610914610ee0565b5b600082013567ffffffffffffffff81111561093357610932610edb565b5b61093f84828501610822565b91505092915050565b61095181610cbe565b82525050565b61096081610cdc565b82525050565b61096f81610ce6565b82525050565b600061098082610c07565b61098a8185610c12565b935061099a818560208601610d81565b6109a381610ee5565b840191505092915050565b6109bf6109ba82610d3c565b610de5565b82525050565b60006109d2602383610c23565b91506109dd82610f03565b604082019050919050565b60006109f5602883610c23565b9150610a0082610f52565b604082019050919050565b610a1481610d32565b82525050565b610a2b610a2682610d32565b610e09565b82525050565b6000610a3d82856109ae565b601482019150610a4d8284610a1a565b6020820191508190509392505050565b6000602082019050610a726000830184610948565b92915050565b600061010082019050610a8e600083018b610948565b610a9b602083018a610a0b565b610aa86040830189610957565b610ab56060830188610948565b610ac26080830187610966565b610acf60a0830186610a0b565b610adc60c0830185610a0b565b81810360e0830152610aee8184610975565b90509998505050505050505050565b6000606082019050610b126000830186610948565b610b1f6020830185610a0b565b8181036040830152610b318184610975565b9050949350505050565b6000602082019050610b506000830184610957565b92915050565b60006020820190508181036000830152610b6f816109c5565b9050919050565b60006020820190508181036000830152610b8f816109e8565b9050919050565b6000602082019050610bab6000830184610a0b565b92915050565b6000610bbb610bcc565b9050610bc78282610db4565b919050565b6000604051905090565b600067ffffffffffffffff821115610bf157610bf0610ea2565b5b610bfa82610ee5565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610c3f82610d32565b9150610c4a83610d32565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c7f57610c7e610e44565b5b828201905092915050565b6000610c9582610d32565b9150610ca083610d32565b925082821015610cb357610cb2610e44565b5b828203905092915050565b6000610cc982610d12565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610d4782610d4e565b9050919050565b6000610d5982610d60565b9050919050565b6000610d6b82610d12565b9050919050565b82818337600083830152505050565b60005b83811015610d9f578082015181840152602081019050610d84565b83811115610dae576000848401525b50505050565b610dbd82610ee5565b810181811067ffffffffffffffff82111715610ddc57610ddb610ea2565b5b80604052505050565b6000610df082610df7565b9050919050565b6000610e0282610ef6565b9050919050565b6000819050919050565b6000610e1e82610d32565b9150610e2983610d32565b925082610e3957610e38610e73565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60008160601b9050919050565b7f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f726160008201527f636c650000000000000000000000000000000000000000000000000000000000602082015250565b7f536f75726365206d75737420626520746865206f7261636c65206f662074686560008201527f2072657175657374000000000000000000000000000000000000000000000000602082015250565b610faa81610cbe565b8114610fb557600080fd5b50565b610fc181610cd0565b8114610fcc57600080fd5b50565b610fd881610cdc565b8114610fe357600080fd5b50565b610fef81610d32565b8114610ffa57600080fd5b5056fea2646970667358221220974a2e4cd6f9302b31e3902626ed882ee949c55fbfe4b3f27ef44c9275ee8d7564736f6c63430008070033";

type HRAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HRAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HRAdapter__factory extends ContractFactory {
  constructor(...args: HRAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HRAdapter> {
    return super.deploy(overrides || {}) as Promise<HRAdapter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HRAdapter {
    return super.attach(address) as HRAdapter;
  }
  override connect(signer: Signer): HRAdapter__factory {
    return super.connect(signer) as HRAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HRAdapterInterface {
    return new utils.Interface(_abi) as HRAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HRAdapter {
    return new Contract(address, _abi, signerOrProvider) as HRAdapter;
  }
}
